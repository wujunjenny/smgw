// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: shortmsg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "shortmsg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace sm {
class basedataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<basedata> {
} _basedata_default_instance_;
class tlvDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<tlv> {
  public:
  ::google::protobuf::int32 ivalue_;
  ::google::protobuf::internal::ArenaStringPtr svalue_;
  ::google::protobuf::internal::ArenaStringPtr bvalue_;
} _tlv_default_instance_;
class longsmDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<longsm> {
} _longsm_default_instance_;
class httplongsmDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<httplongsm> {
} _httplongsm_default_instance_;
class gw_shortmsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<gw_shortmsg> {
  public:
  const ::sm::longsm* subsms_;
  const ::sm::httplongsm* supersms_;
} _gw_shortmsg_default_instance_;

namespace protobuf_shortmsg_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[6];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(basedata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(basedata, sndaddr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(basedata, sndton_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(basedata, sndnpi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(basedata, rcvaddr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(basedata, rcvton_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(basedata, rcvnpi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(basedata, ems_class_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(basedata, pri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(basedata, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(basedata, scheduletime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(basedata, expiretime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(basedata, reporttype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(basedata, dcs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(basedata, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tlv, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tlv, _oneof_case_[0]),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tlv, tlv_type_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_tlv_default_instance_), ivalue_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_tlv_default_instance_), svalue_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_tlv_default_instance_), bvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tlv, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(longsm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(longsm, subcontents_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(httplongsm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(httplongsm, longcontent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(httplongsm, subids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gw_shortmsg, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gw_shortmsg, _oneof_case_[0]),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gw_shortmsg, smdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gw_shortmsg, tlvs_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_gw_shortmsg_default_instance_), subsms_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_gw_shortmsg_default_instance_), supersms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gw_shortmsg, reply_end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gw_shortmsg, step_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gw_shortmsg, snd_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gw_shortmsg, snd_flag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gw_shortmsg, submit_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gw_shortmsg, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gw_shortmsg, snd_cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gw_shortmsg, snd_seq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gw_shortmsg, snd_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gw_shortmsg, rcv_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gw_shortmsg, org_orgaddr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gw_shortmsg, org_destaddr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gw_shortmsg, org_feeaddr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gw_shortmsg, org_servicecode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gw_shortmsg, org_spcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gw_shortmsg, dst_orgaddr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gw_shortmsg, dst_destaddr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gw_shortmsg, dst_servicecode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gw_shortmsg, dst_spcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gw_shortmsg, src_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gw_shortmsg, src_codetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gw_shortmsg, lsm_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(basedata)},
  { 18, -1, sizeof(tlv)},
  { 27, -1, sizeof(longsm)},
  { 32, -1, sizeof(httplongsm)},
  { 38, -1, sizeof(gw_shortmsg)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_basedata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_tlv_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_longsm_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_httplongsm_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_gw_shortmsg_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "shortmsg.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
  const ::google::protobuf::Descriptor* longsm_SubcontentsEntry_descriptor = protobuf_shortmsg_2eproto::file_level_metadata[2].descriptor;
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        longsm_SubcontentsEntry_descriptor,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
            0>::CreateDefaultInstance(
                longsm_SubcontentsEntry_descriptor));
}

}  // namespace

void TableStruct::Shutdown() {
  _basedata_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _tlv_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _longsm_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _httplongsm_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _gw_shortmsg_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _basedata_default_instance_.DefaultConstruct();
  _tlv_default_instance_.DefaultConstruct();
  _longsm_default_instance_.DefaultConstruct();
  _httplongsm_default_instance_.DefaultConstruct();
  _gw_shortmsg_default_instance_.DefaultConstruct();
  _tlv_default_instance_.ivalue_ = 0;
  _tlv_default_instance_.svalue_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _tlv_default_instance_.bvalue_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _gw_shortmsg_default_instance_.get_mutable()->smdata_ = const_cast< ::sm::basedata*>(
      ::sm::basedata::internal_default_instance());
  _gw_shortmsg_default_instance_.subsms_ = const_cast< ::sm::longsm*>(
      ::sm::longsm::internal_default_instance());
  _gw_shortmsg_default_instance_.supersms_ = const_cast< ::sm::httplongsm*>(
      ::sm::httplongsm::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\016shortmsg.proto\022\002sm\"\365\001\n\010basedata\022\017\n\007snd"
      "addr\030\001 \001(\t\022\016\n\006sndton\030\002 \001(\005\022\016\n\006sndnpi\030\003 \001"
      "(\005\022\017\n\007rcvaddr\030\004 \001(\t\022\016\n\006rcvton\030\005 \001(\005\022\016\n\006r"
      "cvnpi\030\006 \001(\005\022\021\n\tems_class\030\007 \001(\005\022\013\n\003pri\030\010 "
      "\001(\005\022\013\n\003pid\030\t \001(\005\022\024\n\014scheduletime\030\n \001(\t\022\022"
      "\n\nexpiretime\030\013 \001(\t\022\022\n\nreporttype\030\014 \001(\005\022\013"
      "\n\003dcs\030\r \001(\005\022\017\n\007content\030\016 \001(\014\"V\n\003tlv\022\020\n\010t"
      "lv_type\030\001 \001(\005\022\020\n\006ivalue\030\002 \001(\005H\000\022\020\n\006svalu"
      "e\030\003 \001(\tH\000\022\020\n\006bvalue\030\004 \001(\014H\000B\007\n\005value\"n\n\006"
      "longsm\0220\n\013subcontents\030\001 \003(\0132\033.sm.longsm."
      "SubcontentsEntry\0322\n\020SubcontentsEntry\022\013\n\003"
      "key\030\001 \001(\t\022\r\n\005value\030\002 \001(\014:\0028\001\"1\n\nhttplong"
      "sm\022\023\n\013longcontent\030\001 \001(\014\022\016\n\006subids\030\002 \003(\t\""
      "\240\004\n\013gw_shortmsg\022\034\n\006smdata\030\024 \001(\0132\014.sm.bas"
      "edata\022\025\n\004tlvs\030\025 \003(\0132\007.sm.tlv\022\034\n\006subsms\030\026"
      " \001(\0132\n.sm.longsmH\000\022\"\n\010supersms\030\027 \001(\0132\016.s"
      "m.httplongsmH\000\022\021\n\treply_end\030( \001(\005\022\014\n\004ste"
      "p\030) \001(\005\022\021\n\tsnd_count\030* \001(\005\022\020\n\010snd_flag\030+"
      " \001(\005\022\023\n\013submit_time\030, \001(\003\022\013\n\003cmd\030- \001(\005\022\017"
      "\n\007snd_cmd\030. \001(\005\022\017\n\007snd_seq\030/ \001(\005\022\016\n\006snd_"
      "id\0300 \001(\005\022\016\n\006rcv_id\0301 \001(\005\022\023\n\013org_orgaddr\030"
      "2 \001(\t\022\024\n\014org_destaddr\0303 \001(\t\022\023\n\013org_feead"
      "dr\0304 \001(\t\022\027\n\017org_servicecode\0305 \001(\t\022\022\n\norg"
      "_spcode\0306 \001(\t\022\023\n\013dst_orgaddr\0307 \001(\t\022\024\n\014ds"
      "t_destaddr\0308 \001(\t\022\027\n\017dst_servicecode\0309 \001("
      "\t\022\022\n\ndst_spcode\030: \001(\t\022\016\n\006src_ip\030; \001(\t\022\024\n"
      "\014src_codetype\030< \001(\005B\005\n\003lsmb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1074);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "shortmsg.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_shortmsg_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int basedata::kSndaddrFieldNumber;
const int basedata::kSndtonFieldNumber;
const int basedata::kSndnpiFieldNumber;
const int basedata::kRcvaddrFieldNumber;
const int basedata::kRcvtonFieldNumber;
const int basedata::kRcvnpiFieldNumber;
const int basedata::kEmsClassFieldNumber;
const int basedata::kPriFieldNumber;
const int basedata::kPidFieldNumber;
const int basedata::kScheduletimeFieldNumber;
const int basedata::kExpiretimeFieldNumber;
const int basedata::kReporttypeFieldNumber;
const int basedata::kDcsFieldNumber;
const int basedata::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

basedata::basedata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_shortmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sm.basedata)
}
basedata::basedata(const basedata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sndaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sndaddr().size() > 0) {
    sndaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sndaddr_);
  }
  rcvaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rcvaddr().size() > 0) {
    rcvaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rcvaddr_);
  }
  scheduletime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scheduletime().size() > 0) {
    scheduletime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scheduletime_);
  }
  expiretime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.expiretime().size() > 0) {
    expiretime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.expiretime_);
  }
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  ::memcpy(&sndton_, &from.sndton_,
    reinterpret_cast<char*>(&dcs_) -
    reinterpret_cast<char*>(&sndton_) + sizeof(dcs_));
  // @@protoc_insertion_point(copy_constructor:sm.basedata)
}

void basedata::SharedCtor() {
  sndaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rcvaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scheduletime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expiretime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sndton_, 0, reinterpret_cast<char*>(&dcs_) -
    reinterpret_cast<char*>(&sndton_) + sizeof(dcs_));
  _cached_size_ = 0;
}

basedata::~basedata() {
  // @@protoc_insertion_point(destructor:sm.basedata)
  SharedDtor();
}

void basedata::SharedDtor() {
  sndaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rcvaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scheduletime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expiretime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void basedata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* basedata::descriptor() {
  protobuf_shortmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_shortmsg_2eproto::file_level_metadata[0].descriptor;
}

const basedata& basedata::default_instance() {
  protobuf_shortmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

basedata* basedata::New(::google::protobuf::Arena* arena) const {
  basedata* n = new basedata;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void basedata::Clear() {
// @@protoc_insertion_point(message_clear_start:sm.basedata)
  sndaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rcvaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scheduletime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expiretime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sndton_, 0, reinterpret_cast<char*>(&dcs_) -
    reinterpret_cast<char*>(&sndton_) + sizeof(dcs_));
}

bool basedata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sm.basedata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sndaddr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sndaddr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sndaddr().data(), this->sndaddr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sm.basedata.sndaddr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sndton = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sndton_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sndnpi = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sndnpi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string rcvaddr = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rcvaddr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rcvaddr().data(), this->rcvaddr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sm.basedata.rcvaddr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 rcvton = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rcvton_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 rcvnpi = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rcvnpi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ems_class = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ems_class_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 pri = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pri_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 pid = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string scheduletime = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scheduletime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scheduletime().data(), this->scheduletime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sm.basedata.scheduletime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string expiretime = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_expiretime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->expiretime().data(), this->expiretime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sm.basedata.expiretime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 reporttype = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reporttype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 dcs = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dcs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes content = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sm.basedata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sm.basedata)
  return false;
#undef DO_
}

void basedata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sm.basedata)
  // string sndaddr = 1;
  if (this->sndaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sndaddr().data(), this->sndaddr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sm.basedata.sndaddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sndaddr(), output);
  }

  // int32 sndton = 2;
  if (this->sndton() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sndton(), output);
  }

  // int32 sndnpi = 3;
  if (this->sndnpi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->sndnpi(), output);
  }

  // string rcvaddr = 4;
  if (this->rcvaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rcvaddr().data(), this->rcvaddr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sm.basedata.rcvaddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->rcvaddr(), output);
  }

  // int32 rcvton = 5;
  if (this->rcvton() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->rcvton(), output);
  }

  // int32 rcvnpi = 6;
  if (this->rcvnpi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->rcvnpi(), output);
  }

  // int32 ems_class = 7;
  if (this->ems_class() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->ems_class(), output);
  }

  // int32 pri = 8;
  if (this->pri() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->pri(), output);
  }

  // int32 pid = 9;
  if (this->pid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->pid(), output);
  }

  // string scheduletime = 10;
  if (this->scheduletime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scheduletime().data(), this->scheduletime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sm.basedata.scheduletime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->scheduletime(), output);
  }

  // string expiretime = 11;
  if (this->expiretime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->expiretime().data(), this->expiretime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sm.basedata.expiretime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->expiretime(), output);
  }

  // int32 reporttype = 12;
  if (this->reporttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->reporttype(), output);
  }

  // int32 dcs = 13;
  if (this->dcs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->dcs(), output);
  }

  // bytes content = 14;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      14, this->content(), output);
  }

  // @@protoc_insertion_point(serialize_end:sm.basedata)
}

::google::protobuf::uint8* basedata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sm.basedata)
  // string sndaddr = 1;
  if (this->sndaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sndaddr().data(), this->sndaddr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sm.basedata.sndaddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sndaddr(), target);
  }

  // int32 sndton = 2;
  if (this->sndton() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sndton(), target);
  }

  // int32 sndnpi = 3;
  if (this->sndnpi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->sndnpi(), target);
  }

  // string rcvaddr = 4;
  if (this->rcvaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rcvaddr().data(), this->rcvaddr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sm.basedata.rcvaddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->rcvaddr(), target);
  }

  // int32 rcvton = 5;
  if (this->rcvton() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->rcvton(), target);
  }

  // int32 rcvnpi = 6;
  if (this->rcvnpi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->rcvnpi(), target);
  }

  // int32 ems_class = 7;
  if (this->ems_class() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->ems_class(), target);
  }

  // int32 pri = 8;
  if (this->pri() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->pri(), target);
  }

  // int32 pid = 9;
  if (this->pid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->pid(), target);
  }

  // string scheduletime = 10;
  if (this->scheduletime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scheduletime().data(), this->scheduletime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sm.basedata.scheduletime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->scheduletime(), target);
  }

  // string expiretime = 11;
  if (this->expiretime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->expiretime().data(), this->expiretime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sm.basedata.expiretime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->expiretime(), target);
  }

  // int32 reporttype = 12;
  if (this->reporttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->reporttype(), target);
  }

  // int32 dcs = 13;
  if (this->dcs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->dcs(), target);
  }

  // bytes content = 14;
  if (this->content().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        14, this->content(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:sm.basedata)
  return target;
}

size_t basedata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sm.basedata)
  size_t total_size = 0;

  // string sndaddr = 1;
  if (this->sndaddr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sndaddr());
  }

  // string rcvaddr = 4;
  if (this->rcvaddr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rcvaddr());
  }

  // string scheduletime = 10;
  if (this->scheduletime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scheduletime());
  }

  // string expiretime = 11;
  if (this->expiretime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->expiretime());
  }

  // bytes content = 14;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->content());
  }

  // int32 sndton = 2;
  if (this->sndton() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sndton());
  }

  // int32 sndnpi = 3;
  if (this->sndnpi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sndnpi());
  }

  // int32 rcvton = 5;
  if (this->rcvton() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rcvton());
  }

  // int32 rcvnpi = 6;
  if (this->rcvnpi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rcvnpi());
  }

  // int32 ems_class = 7;
  if (this->ems_class() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ems_class());
  }

  // int32 pri = 8;
  if (this->pri() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pri());
  }

  // int32 pid = 9;
  if (this->pid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pid());
  }

  // int32 reporttype = 12;
  if (this->reporttype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->reporttype());
  }

  // int32 dcs = 13;
  if (this->dcs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dcs());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void basedata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sm.basedata)
  GOOGLE_DCHECK_NE(&from, this);
  const basedata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const basedata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sm.basedata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sm.basedata)
    MergeFrom(*source);
  }
}

void basedata::MergeFrom(const basedata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sm.basedata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.sndaddr().size() > 0) {

    sndaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sndaddr_);
  }
  if (from.rcvaddr().size() > 0) {

    rcvaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rcvaddr_);
  }
  if (from.scheduletime().size() > 0) {

    scheduletime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scheduletime_);
  }
  if (from.expiretime().size() > 0) {

    expiretime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.expiretime_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.sndton() != 0) {
    set_sndton(from.sndton());
  }
  if (from.sndnpi() != 0) {
    set_sndnpi(from.sndnpi());
  }
  if (from.rcvton() != 0) {
    set_rcvton(from.rcvton());
  }
  if (from.rcvnpi() != 0) {
    set_rcvnpi(from.rcvnpi());
  }
  if (from.ems_class() != 0) {
    set_ems_class(from.ems_class());
  }
  if (from.pri() != 0) {
    set_pri(from.pri());
  }
  if (from.pid() != 0) {
    set_pid(from.pid());
  }
  if (from.reporttype() != 0) {
    set_reporttype(from.reporttype());
  }
  if (from.dcs() != 0) {
    set_dcs(from.dcs());
  }
}

void basedata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sm.basedata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void basedata::CopyFrom(const basedata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sm.basedata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool basedata::IsInitialized() const {
  return true;
}

void basedata::Swap(basedata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void basedata::InternalSwap(basedata* other) {
  sndaddr_.Swap(&other->sndaddr_);
  rcvaddr_.Swap(&other->rcvaddr_);
  scheduletime_.Swap(&other->scheduletime_);
  expiretime_.Swap(&other->expiretime_);
  content_.Swap(&other->content_);
  std::swap(sndton_, other->sndton_);
  std::swap(sndnpi_, other->sndnpi_);
  std::swap(rcvton_, other->rcvton_);
  std::swap(rcvnpi_, other->rcvnpi_);
  std::swap(ems_class_, other->ems_class_);
  std::swap(pri_, other->pri_);
  std::swap(pid_, other->pid_);
  std::swap(reporttype_, other->reporttype_);
  std::swap(dcs_, other->dcs_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata basedata::GetMetadata() const {
  protobuf_shortmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_shortmsg_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// basedata

// string sndaddr = 1;
void basedata::clear_sndaddr() {
  sndaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& basedata::sndaddr() const {
  // @@protoc_insertion_point(field_get:sm.basedata.sndaddr)
  return sndaddr_.GetNoArena();
}
void basedata::set_sndaddr(const ::std::string& value) {
  
  sndaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sm.basedata.sndaddr)
}
#if LANG_CXX11
void basedata::set_sndaddr(::std::string&& value) {
  
  sndaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sm.basedata.sndaddr)
}
#endif
void basedata::set_sndaddr(const char* value) {
  
  sndaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sm.basedata.sndaddr)
}
void basedata::set_sndaddr(const char* value, size_t size) {
  
  sndaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sm.basedata.sndaddr)
}
::std::string* basedata::mutable_sndaddr() {
  
  // @@protoc_insertion_point(field_mutable:sm.basedata.sndaddr)
  return sndaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* basedata::release_sndaddr() {
  // @@protoc_insertion_point(field_release:sm.basedata.sndaddr)
  
  return sndaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void basedata::set_allocated_sndaddr(::std::string* sndaddr) {
  if (sndaddr != NULL) {
    
  } else {
    
  }
  sndaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sndaddr);
  // @@protoc_insertion_point(field_set_allocated:sm.basedata.sndaddr)
}

// int32 sndton = 2;
void basedata::clear_sndton() {
  sndton_ = 0;
}
::google::protobuf::int32 basedata::sndton() const {
  // @@protoc_insertion_point(field_get:sm.basedata.sndton)
  return sndton_;
}
void basedata::set_sndton(::google::protobuf::int32 value) {
  
  sndton_ = value;
  // @@protoc_insertion_point(field_set:sm.basedata.sndton)
}

// int32 sndnpi = 3;
void basedata::clear_sndnpi() {
  sndnpi_ = 0;
}
::google::protobuf::int32 basedata::sndnpi() const {
  // @@protoc_insertion_point(field_get:sm.basedata.sndnpi)
  return sndnpi_;
}
void basedata::set_sndnpi(::google::protobuf::int32 value) {
  
  sndnpi_ = value;
  // @@protoc_insertion_point(field_set:sm.basedata.sndnpi)
}

// string rcvaddr = 4;
void basedata::clear_rcvaddr() {
  rcvaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& basedata::rcvaddr() const {
  // @@protoc_insertion_point(field_get:sm.basedata.rcvaddr)
  return rcvaddr_.GetNoArena();
}
void basedata::set_rcvaddr(const ::std::string& value) {
  
  rcvaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sm.basedata.rcvaddr)
}
#if LANG_CXX11
void basedata::set_rcvaddr(::std::string&& value) {
  
  rcvaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sm.basedata.rcvaddr)
}
#endif
void basedata::set_rcvaddr(const char* value) {
  
  rcvaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sm.basedata.rcvaddr)
}
void basedata::set_rcvaddr(const char* value, size_t size) {
  
  rcvaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sm.basedata.rcvaddr)
}
::std::string* basedata::mutable_rcvaddr() {
  
  // @@protoc_insertion_point(field_mutable:sm.basedata.rcvaddr)
  return rcvaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* basedata::release_rcvaddr() {
  // @@protoc_insertion_point(field_release:sm.basedata.rcvaddr)
  
  return rcvaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void basedata::set_allocated_rcvaddr(::std::string* rcvaddr) {
  if (rcvaddr != NULL) {
    
  } else {
    
  }
  rcvaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rcvaddr);
  // @@protoc_insertion_point(field_set_allocated:sm.basedata.rcvaddr)
}

// int32 rcvton = 5;
void basedata::clear_rcvton() {
  rcvton_ = 0;
}
::google::protobuf::int32 basedata::rcvton() const {
  // @@protoc_insertion_point(field_get:sm.basedata.rcvton)
  return rcvton_;
}
void basedata::set_rcvton(::google::protobuf::int32 value) {
  
  rcvton_ = value;
  // @@protoc_insertion_point(field_set:sm.basedata.rcvton)
}

// int32 rcvnpi = 6;
void basedata::clear_rcvnpi() {
  rcvnpi_ = 0;
}
::google::protobuf::int32 basedata::rcvnpi() const {
  // @@protoc_insertion_point(field_get:sm.basedata.rcvnpi)
  return rcvnpi_;
}
void basedata::set_rcvnpi(::google::protobuf::int32 value) {
  
  rcvnpi_ = value;
  // @@protoc_insertion_point(field_set:sm.basedata.rcvnpi)
}

// int32 ems_class = 7;
void basedata::clear_ems_class() {
  ems_class_ = 0;
}
::google::protobuf::int32 basedata::ems_class() const {
  // @@protoc_insertion_point(field_get:sm.basedata.ems_class)
  return ems_class_;
}
void basedata::set_ems_class(::google::protobuf::int32 value) {
  
  ems_class_ = value;
  // @@protoc_insertion_point(field_set:sm.basedata.ems_class)
}

// int32 pri = 8;
void basedata::clear_pri() {
  pri_ = 0;
}
::google::protobuf::int32 basedata::pri() const {
  // @@protoc_insertion_point(field_get:sm.basedata.pri)
  return pri_;
}
void basedata::set_pri(::google::protobuf::int32 value) {
  
  pri_ = value;
  // @@protoc_insertion_point(field_set:sm.basedata.pri)
}

// int32 pid = 9;
void basedata::clear_pid() {
  pid_ = 0;
}
::google::protobuf::int32 basedata::pid() const {
  // @@protoc_insertion_point(field_get:sm.basedata.pid)
  return pid_;
}
void basedata::set_pid(::google::protobuf::int32 value) {
  
  pid_ = value;
  // @@protoc_insertion_point(field_set:sm.basedata.pid)
}

// string scheduletime = 10;
void basedata::clear_scheduletime() {
  scheduletime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& basedata::scheduletime() const {
  // @@protoc_insertion_point(field_get:sm.basedata.scheduletime)
  return scheduletime_.GetNoArena();
}
void basedata::set_scheduletime(const ::std::string& value) {
  
  scheduletime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sm.basedata.scheduletime)
}
#if LANG_CXX11
void basedata::set_scheduletime(::std::string&& value) {
  
  scheduletime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sm.basedata.scheduletime)
}
#endif
void basedata::set_scheduletime(const char* value) {
  
  scheduletime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sm.basedata.scheduletime)
}
void basedata::set_scheduletime(const char* value, size_t size) {
  
  scheduletime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sm.basedata.scheduletime)
}
::std::string* basedata::mutable_scheduletime() {
  
  // @@protoc_insertion_point(field_mutable:sm.basedata.scheduletime)
  return scheduletime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* basedata::release_scheduletime() {
  // @@protoc_insertion_point(field_release:sm.basedata.scheduletime)
  
  return scheduletime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void basedata::set_allocated_scheduletime(::std::string* scheduletime) {
  if (scheduletime != NULL) {
    
  } else {
    
  }
  scheduletime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scheduletime);
  // @@protoc_insertion_point(field_set_allocated:sm.basedata.scheduletime)
}

// string expiretime = 11;
void basedata::clear_expiretime() {
  expiretime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& basedata::expiretime() const {
  // @@protoc_insertion_point(field_get:sm.basedata.expiretime)
  return expiretime_.GetNoArena();
}
void basedata::set_expiretime(const ::std::string& value) {
  
  expiretime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sm.basedata.expiretime)
}
#if LANG_CXX11
void basedata::set_expiretime(::std::string&& value) {
  
  expiretime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sm.basedata.expiretime)
}
#endif
void basedata::set_expiretime(const char* value) {
  
  expiretime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sm.basedata.expiretime)
}
void basedata::set_expiretime(const char* value, size_t size) {
  
  expiretime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sm.basedata.expiretime)
}
::std::string* basedata::mutable_expiretime() {
  
  // @@protoc_insertion_point(field_mutable:sm.basedata.expiretime)
  return expiretime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* basedata::release_expiretime() {
  // @@protoc_insertion_point(field_release:sm.basedata.expiretime)
  
  return expiretime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void basedata::set_allocated_expiretime(::std::string* expiretime) {
  if (expiretime != NULL) {
    
  } else {
    
  }
  expiretime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), expiretime);
  // @@protoc_insertion_point(field_set_allocated:sm.basedata.expiretime)
}

// int32 reporttype = 12;
void basedata::clear_reporttype() {
  reporttype_ = 0;
}
::google::protobuf::int32 basedata::reporttype() const {
  // @@protoc_insertion_point(field_get:sm.basedata.reporttype)
  return reporttype_;
}
void basedata::set_reporttype(::google::protobuf::int32 value) {
  
  reporttype_ = value;
  // @@protoc_insertion_point(field_set:sm.basedata.reporttype)
}

// int32 dcs = 13;
void basedata::clear_dcs() {
  dcs_ = 0;
}
::google::protobuf::int32 basedata::dcs() const {
  // @@protoc_insertion_point(field_get:sm.basedata.dcs)
  return dcs_;
}
void basedata::set_dcs(::google::protobuf::int32 value) {
  
  dcs_ = value;
  // @@protoc_insertion_point(field_set:sm.basedata.dcs)
}

// bytes content = 14;
void basedata::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& basedata::content() const {
  // @@protoc_insertion_point(field_get:sm.basedata.content)
  return content_.GetNoArena();
}
void basedata::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sm.basedata.content)
}
#if LANG_CXX11
void basedata::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sm.basedata.content)
}
#endif
void basedata::set_content(const char* value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sm.basedata.content)
}
void basedata::set_content(const void* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sm.basedata.content)
}
::std::string* basedata::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:sm.basedata.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* basedata::release_content() {
  // @@protoc_insertion_point(field_release:sm.basedata.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void basedata::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:sm.basedata.content)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tlv::kTlvTypeFieldNumber;
const int tlv::kIvalueFieldNumber;
const int tlv::kSvalueFieldNumber;
const int tlv::kBvalueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tlv::tlv()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_shortmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sm.tlv)
}
tlv::tlv(const tlv& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tlv_type_ = from.tlv_type_;
  clear_has_value();
  switch (from.value_case()) {
    case kIvalue: {
      set_ivalue(from.ivalue());
      break;
    }
    case kSvalue: {
      set_svalue(from.svalue());
      break;
    }
    case kBvalue: {
      set_bvalue(from.bvalue());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:sm.tlv)
}

void tlv::SharedCtor() {
  tlv_type_ = 0;
  clear_has_value();
  _cached_size_ = 0;
}

tlv::~tlv() {
  // @@protoc_insertion_point(destructor:sm.tlv)
  SharedDtor();
}

void tlv::SharedDtor() {
  if (has_value()) {
    clear_value();
  }
}

void tlv::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* tlv::descriptor() {
  protobuf_shortmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_shortmsg_2eproto::file_level_metadata[1].descriptor;
}

const tlv& tlv::default_instance() {
  protobuf_shortmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

tlv* tlv::New(::google::protobuf::Arena* arena) const {
  tlv* n = new tlv;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void tlv::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:sm.tlv)
  switch (value_case()) {
    case kIvalue: {
      // No need to clear
      break;
    }
    case kSvalue: {
      value_.svalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kBvalue: {
      value_.bvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void tlv::Clear() {
// @@protoc_insertion_point(message_clear_start:sm.tlv)
  tlv_type_ = 0;
  clear_value();
}

bool tlv::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sm.tlv)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 tlv_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tlv_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ivalue = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_.ivalue_)));
          set_has_ivalue();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string svalue = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_svalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->svalue().data(), this->svalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sm.tlv.svalue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes bvalue = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bvalue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sm.tlv)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sm.tlv)
  return false;
#undef DO_
}

void tlv::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sm.tlv)
  // int32 tlv_type = 1;
  if (this->tlv_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->tlv_type(), output);
  }

  // int32 ivalue = 2;
  if (has_ivalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ivalue(), output);
  }

  // string svalue = 3;
  if (has_svalue()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->svalue().data(), this->svalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sm.tlv.svalue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->svalue(), output);
  }

  // bytes bvalue = 4;
  if (has_bvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->bvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:sm.tlv)
}

::google::protobuf::uint8* tlv::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sm.tlv)
  // int32 tlv_type = 1;
  if (this->tlv_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->tlv_type(), target);
  }

  // int32 ivalue = 2;
  if (has_ivalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ivalue(), target);
  }

  // string svalue = 3;
  if (has_svalue()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->svalue().data(), this->svalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sm.tlv.svalue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->svalue(), target);
  }

  // bytes bvalue = 4;
  if (has_bvalue()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->bvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:sm.tlv)
  return target;
}

size_t tlv::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sm.tlv)
  size_t total_size = 0;

  // int32 tlv_type = 1;
  if (this->tlv_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tlv_type());
  }

  switch (value_case()) {
    // int32 ivalue = 2;
    case kIvalue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ivalue());
      break;
    }
    // string svalue = 3;
    case kSvalue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->svalue());
      break;
    }
    // bytes bvalue = 4;
    case kBvalue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bvalue());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void tlv::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sm.tlv)
  GOOGLE_DCHECK_NE(&from, this);
  const tlv* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tlv>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sm.tlv)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sm.tlv)
    MergeFrom(*source);
  }
}

void tlv::MergeFrom(const tlv& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sm.tlv)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.tlv_type() != 0) {
    set_tlv_type(from.tlv_type());
  }
  switch (from.value_case()) {
    case kIvalue: {
      set_ivalue(from.ivalue());
      break;
    }
    case kSvalue: {
      set_svalue(from.svalue());
      break;
    }
    case kBvalue: {
      set_bvalue(from.bvalue());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void tlv::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sm.tlv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tlv::CopyFrom(const tlv& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sm.tlv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tlv::IsInitialized() const {
  return true;
}

void tlv::Swap(tlv* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tlv::InternalSwap(tlv* other) {
  std::swap(tlv_type_, other->tlv_type_);
  std::swap(value_, other->value_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata tlv::GetMetadata() const {
  protobuf_shortmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_shortmsg_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// tlv

// int32 tlv_type = 1;
void tlv::clear_tlv_type() {
  tlv_type_ = 0;
}
::google::protobuf::int32 tlv::tlv_type() const {
  // @@protoc_insertion_point(field_get:sm.tlv.tlv_type)
  return tlv_type_;
}
void tlv::set_tlv_type(::google::protobuf::int32 value) {
  
  tlv_type_ = value;
  // @@protoc_insertion_point(field_set:sm.tlv.tlv_type)
}

// int32 ivalue = 2;
bool tlv::has_ivalue() const {
  return value_case() == kIvalue;
}
void tlv::set_has_ivalue() {
  _oneof_case_[0] = kIvalue;
}
void tlv::clear_ivalue() {
  if (has_ivalue()) {
    value_.ivalue_ = 0;
    clear_has_value();
  }
}
::google::protobuf::int32 tlv::ivalue() const {
  // @@protoc_insertion_point(field_get:sm.tlv.ivalue)
  if (has_ivalue()) {
    return value_.ivalue_;
  }
  return 0;
}
void tlv::set_ivalue(::google::protobuf::int32 value) {
  if (!has_ivalue()) {
    clear_value();
    set_has_ivalue();
  }
  value_.ivalue_ = value;
  // @@protoc_insertion_point(field_set:sm.tlv.ivalue)
}

// string svalue = 3;
bool tlv::has_svalue() const {
  return value_case() == kSvalue;
}
void tlv::set_has_svalue() {
  _oneof_case_[0] = kSvalue;
}
void tlv::clear_svalue() {
  if (has_svalue()) {
    value_.svalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
const ::std::string& tlv::svalue() const {
  // @@protoc_insertion_point(field_get:sm.tlv.svalue)
  if (has_svalue()) {
    return value_.svalue_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void tlv::set_svalue(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:sm.tlv.svalue)
  if (!has_svalue()) {
    clear_value();
    set_has_svalue();
    value_.svalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.svalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sm.tlv.svalue)
}
#if LANG_CXX11
void tlv::set_svalue(::std::string&& value) {
  // @@protoc_insertion_point(field_set:sm.tlv.svalue)
  if (!has_svalue()) {
    clear_value();
    set_has_svalue();
    value_.svalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.svalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sm.tlv.svalue)
}
#endif
void tlv::set_svalue(const char* value) {
  if (!has_svalue()) {
    clear_value();
    set_has_svalue();
    value_.svalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.svalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sm.tlv.svalue)
}
void tlv::set_svalue(const char* value, size_t size) {
  if (!has_svalue()) {
    clear_value();
    set_has_svalue();
    value_.svalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.svalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sm.tlv.svalue)
}
::std::string* tlv::mutable_svalue() {
  if (!has_svalue()) {
    clear_value();
    set_has_svalue();
    value_.svalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:sm.tlv.svalue)
  return value_.svalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* tlv::release_svalue() {
  // @@protoc_insertion_point(field_release:sm.tlv.svalue)
  if (has_svalue()) {
    clear_has_value();
    return value_.svalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void tlv::set_allocated_svalue(::std::string* svalue) {
  if (!has_svalue()) {
    value_.svalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (svalue != NULL) {
    set_has_svalue();
    value_.svalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        svalue);
  }
  // @@protoc_insertion_point(field_set_allocated:sm.tlv.svalue)
}

// bytes bvalue = 4;
bool tlv::has_bvalue() const {
  return value_case() == kBvalue;
}
void tlv::set_has_bvalue() {
  _oneof_case_[0] = kBvalue;
}
void tlv::clear_bvalue() {
  if (has_bvalue()) {
    value_.bvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
const ::std::string& tlv::bvalue() const {
  // @@protoc_insertion_point(field_get:sm.tlv.bvalue)
  if (has_bvalue()) {
    return value_.bvalue_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void tlv::set_bvalue(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:sm.tlv.bvalue)
  if (!has_bvalue()) {
    clear_value();
    set_has_bvalue();
    value_.bvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.bvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sm.tlv.bvalue)
}
#if LANG_CXX11
void tlv::set_bvalue(::std::string&& value) {
  // @@protoc_insertion_point(field_set:sm.tlv.bvalue)
  if (!has_bvalue()) {
    clear_value();
    set_has_bvalue();
    value_.bvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.bvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sm.tlv.bvalue)
}
#endif
void tlv::set_bvalue(const char* value) {
  if (!has_bvalue()) {
    clear_value();
    set_has_bvalue();
    value_.bvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.bvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sm.tlv.bvalue)
}
void tlv::set_bvalue(const void* value, size_t size) {
  if (!has_bvalue()) {
    clear_value();
    set_has_bvalue();
    value_.bvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.bvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sm.tlv.bvalue)
}
::std::string* tlv::mutable_bvalue() {
  if (!has_bvalue()) {
    clear_value();
    set_has_bvalue();
    value_.bvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:sm.tlv.bvalue)
  return value_.bvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* tlv::release_bvalue() {
  // @@protoc_insertion_point(field_release:sm.tlv.bvalue)
  if (has_bvalue()) {
    clear_has_value();
    return value_.bvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void tlv::set_allocated_bvalue(::std::string* bvalue) {
  if (!has_bvalue()) {
    value_.bvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (bvalue != NULL) {
    set_has_bvalue();
    value_.bvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        bvalue);
  }
  // @@protoc_insertion_point(field_set_allocated:sm.tlv.bvalue)
}

bool tlv::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
void tlv::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
tlv::ValueCase tlv::value_case() const {
  return tlv::ValueCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int longsm::kSubcontentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

longsm::longsm()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_shortmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sm.longsm)
}
longsm::longsm(const longsm& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  const ::google::protobuf::Descriptor*& longsm_SubcontentsEntry_descriptor = protobuf_shortmsg_2eproto::file_level_metadata[2].descriptor;
  subcontents_.SetAssignDescriptorCallback(
      protobuf_shortmsg_2eproto::protobuf_AssignDescriptorsOnce);
  subcontents_.SetEntryDescriptor(
      &longsm_SubcontentsEntry_descriptor);
  subcontents_.MergeFrom(from.subcontents_);
  // @@protoc_insertion_point(copy_constructor:sm.longsm)
}

void longsm::SharedCtor() {
  const ::google::protobuf::Descriptor*& longsm_SubcontentsEntry_descriptor = protobuf_shortmsg_2eproto::file_level_metadata[2].descriptor;
  subcontents_.SetAssignDescriptorCallback(
      protobuf_shortmsg_2eproto::protobuf_AssignDescriptorsOnce);
  subcontents_.SetEntryDescriptor(
      &longsm_SubcontentsEntry_descriptor);
  _cached_size_ = 0;
}

longsm::~longsm() {
  // @@protoc_insertion_point(destructor:sm.longsm)
  SharedDtor();
}

void longsm::SharedDtor() {
}

void longsm::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* longsm::descriptor() {
  protobuf_shortmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_shortmsg_2eproto::file_level_metadata[3].descriptor;
}

const longsm& longsm::default_instance() {
  protobuf_shortmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

longsm* longsm::New(::google::protobuf::Arena* arena) const {
  longsm* n = new longsm;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void longsm::Clear() {
// @@protoc_insertion_point(message_clear_start:sm.longsm)
  subcontents_.Clear();
}

bool longsm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sm.longsm)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, bytes> subcontents = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(input->IncrementRecursionDepth());
          longsm_SubcontentsEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&subcontents_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sm.longsm.SubcontentsEntry.key"));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sm.longsm)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sm.longsm)
  return false;
#undef DO_
}

void longsm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sm.longsm)
  // map<string, bytes> subcontents = 1;
  if (!this->subcontents().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "sm.longsm.SubcontentsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->subcontents().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->subcontents().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->subcontents().begin();
          it != this->subcontents().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<longsm_SubcontentsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(subcontents_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<longsm_SubcontentsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->subcontents().begin();
          it != this->subcontents().end(); ++it) {
        entry.reset(subcontents_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:sm.longsm)
}

::google::protobuf::uint8* longsm::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sm.longsm)
  // map<string, bytes> subcontents = 1;
  if (!this->subcontents().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "sm.longsm.SubcontentsEntry.key");
      }
    };

    if (deterministic &&
        this->subcontents().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->subcontents().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->subcontents().begin();
          it != this->subcontents().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<longsm_SubcontentsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(subcontents_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<longsm_SubcontentsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->subcontents().begin();
          it != this->subcontents().end(); ++it) {
        entry.reset(subcontents_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:sm.longsm)
  return target;
}

size_t longsm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sm.longsm)
  size_t total_size = 0;

  // map<string, bytes> subcontents = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->subcontents_size());
  {
    ::google::protobuf::scoped_ptr<longsm_SubcontentsEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->subcontents().begin();
        it != this->subcontents().end(); ++it) {
      entry.reset(subcontents_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void longsm::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sm.longsm)
  GOOGLE_DCHECK_NE(&from, this);
  const longsm* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const longsm>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sm.longsm)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sm.longsm)
    MergeFrom(*source);
  }
}

void longsm::MergeFrom(const longsm& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sm.longsm)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  subcontents_.MergeFrom(from.subcontents_);
}

void longsm::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sm.longsm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void longsm::CopyFrom(const longsm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sm.longsm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool longsm::IsInitialized() const {
  return true;
}

void longsm::Swap(longsm* other) {
  if (other == this) return;
  InternalSwap(other);
}
void longsm::InternalSwap(longsm* other) {
  subcontents_.Swap(&other->subcontents_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata longsm::GetMetadata() const {
  protobuf_shortmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_shortmsg_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// longsm

// map<string, bytes> subcontents = 1;
int longsm::subcontents_size() const {
  return subcontents_.size();
}
void longsm::clear_subcontents() {
  subcontents_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
longsm::subcontents() const {
  // @@protoc_insertion_point(field_map:sm.longsm.subcontents)
  return subcontents_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
longsm::mutable_subcontents() {
  // @@protoc_insertion_point(field_mutable_map:sm.longsm.subcontents)
  return subcontents_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int httplongsm::kLongcontentFieldNumber;
const int httplongsm::kSubidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

httplongsm::httplongsm()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_shortmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sm.httplongsm)
}
httplongsm::httplongsm(const httplongsm& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      subids_(from.subids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  longcontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.longcontent().size() > 0) {
    longcontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.longcontent_);
  }
  // @@protoc_insertion_point(copy_constructor:sm.httplongsm)
}

void httplongsm::SharedCtor() {
  longcontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

httplongsm::~httplongsm() {
  // @@protoc_insertion_point(destructor:sm.httplongsm)
  SharedDtor();
}

void httplongsm::SharedDtor() {
  longcontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void httplongsm::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* httplongsm::descriptor() {
  protobuf_shortmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_shortmsg_2eproto::file_level_metadata[4].descriptor;
}

const httplongsm& httplongsm::default_instance() {
  protobuf_shortmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

httplongsm* httplongsm::New(::google::protobuf::Arena* arena) const {
  httplongsm* n = new httplongsm;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void httplongsm::Clear() {
// @@protoc_insertion_point(message_clear_start:sm.httplongsm)
  subids_.Clear();
  longcontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool httplongsm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sm.httplongsm)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes longcontent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_longcontent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string subids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_subids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subids(this->subids_size() - 1).data(),
            this->subids(this->subids_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sm.httplongsm.subids"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sm.httplongsm)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sm.httplongsm)
  return false;
#undef DO_
}

void httplongsm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sm.httplongsm)
  // bytes longcontent = 1;
  if (this->longcontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->longcontent(), output);
  }

  // repeated string subids = 2;
  for (int i = 0, n = this->subids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subids(i).data(), this->subids(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sm.httplongsm.subids");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->subids(i), output);
  }

  // @@protoc_insertion_point(serialize_end:sm.httplongsm)
}

::google::protobuf::uint8* httplongsm::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sm.httplongsm)
  // bytes longcontent = 1;
  if (this->longcontent().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->longcontent(), target);
  }

  // repeated string subids = 2;
  for (int i = 0, n = this->subids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subids(i).data(), this->subids(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sm.httplongsm.subids");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->subids(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:sm.httplongsm)
  return target;
}

size_t httplongsm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sm.httplongsm)
  size_t total_size = 0;

  // repeated string subids = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->subids_size());
  for (int i = 0, n = this->subids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->subids(i));
  }

  // bytes longcontent = 1;
  if (this->longcontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->longcontent());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void httplongsm::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sm.httplongsm)
  GOOGLE_DCHECK_NE(&from, this);
  const httplongsm* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const httplongsm>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sm.httplongsm)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sm.httplongsm)
    MergeFrom(*source);
  }
}

void httplongsm::MergeFrom(const httplongsm& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sm.httplongsm)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  subids_.MergeFrom(from.subids_);
  if (from.longcontent().size() > 0) {

    longcontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.longcontent_);
  }
}

void httplongsm::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sm.httplongsm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void httplongsm::CopyFrom(const httplongsm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sm.httplongsm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool httplongsm::IsInitialized() const {
  return true;
}

void httplongsm::Swap(httplongsm* other) {
  if (other == this) return;
  InternalSwap(other);
}
void httplongsm::InternalSwap(httplongsm* other) {
  subids_.UnsafeArenaSwap(&other->subids_);
  longcontent_.Swap(&other->longcontent_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata httplongsm::GetMetadata() const {
  protobuf_shortmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_shortmsg_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// httplongsm

// bytes longcontent = 1;
void httplongsm::clear_longcontent() {
  longcontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& httplongsm::longcontent() const {
  // @@protoc_insertion_point(field_get:sm.httplongsm.longcontent)
  return longcontent_.GetNoArena();
}
void httplongsm::set_longcontent(const ::std::string& value) {
  
  longcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sm.httplongsm.longcontent)
}
#if LANG_CXX11
void httplongsm::set_longcontent(::std::string&& value) {
  
  longcontent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sm.httplongsm.longcontent)
}
#endif
void httplongsm::set_longcontent(const char* value) {
  
  longcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sm.httplongsm.longcontent)
}
void httplongsm::set_longcontent(const void* value, size_t size) {
  
  longcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sm.httplongsm.longcontent)
}
::std::string* httplongsm::mutable_longcontent() {
  
  // @@protoc_insertion_point(field_mutable:sm.httplongsm.longcontent)
  return longcontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* httplongsm::release_longcontent() {
  // @@protoc_insertion_point(field_release:sm.httplongsm.longcontent)
  
  return longcontent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void httplongsm::set_allocated_longcontent(::std::string* longcontent) {
  if (longcontent != NULL) {
    
  } else {
    
  }
  longcontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), longcontent);
  // @@protoc_insertion_point(field_set_allocated:sm.httplongsm.longcontent)
}

// repeated string subids = 2;
int httplongsm::subids_size() const {
  return subids_.size();
}
void httplongsm::clear_subids() {
  subids_.Clear();
}
const ::std::string& httplongsm::subids(int index) const {
  // @@protoc_insertion_point(field_get:sm.httplongsm.subids)
  return subids_.Get(index);
}
::std::string* httplongsm::mutable_subids(int index) {
  // @@protoc_insertion_point(field_mutable:sm.httplongsm.subids)
  return subids_.Mutable(index);
}
void httplongsm::set_subids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:sm.httplongsm.subids)
  subids_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void httplongsm::set_subids(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:sm.httplongsm.subids)
  subids_.Mutable(index)->assign(std::move(value));
}
#endif
void httplongsm::set_subids(int index, const char* value) {
  subids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:sm.httplongsm.subids)
}
void httplongsm::set_subids(int index, const char* value, size_t size) {
  subids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:sm.httplongsm.subids)
}
::std::string* httplongsm::add_subids() {
  // @@protoc_insertion_point(field_add_mutable:sm.httplongsm.subids)
  return subids_.Add();
}
void httplongsm::add_subids(const ::std::string& value) {
  subids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:sm.httplongsm.subids)
}
#if LANG_CXX11
void httplongsm::add_subids(::std::string&& value) {
  subids_.Add()->assign(std::move(value));
  // @@protoc_insertion_point(field_add:sm.httplongsm.subids)
}
#endif
void httplongsm::add_subids(const char* value) {
  subids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:sm.httplongsm.subids)
}
void httplongsm::add_subids(const char* value, size_t size) {
  subids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:sm.httplongsm.subids)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
httplongsm::subids() const {
  // @@protoc_insertion_point(field_list:sm.httplongsm.subids)
  return subids_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
httplongsm::mutable_subids() {
  // @@protoc_insertion_point(field_mutable_list:sm.httplongsm.subids)
  return &subids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int gw_shortmsg::kSmdataFieldNumber;
const int gw_shortmsg::kTlvsFieldNumber;
const int gw_shortmsg::kSubsmsFieldNumber;
const int gw_shortmsg::kSupersmsFieldNumber;
const int gw_shortmsg::kReplyEndFieldNumber;
const int gw_shortmsg::kStepFieldNumber;
const int gw_shortmsg::kSndCountFieldNumber;
const int gw_shortmsg::kSndFlagFieldNumber;
const int gw_shortmsg::kSubmitTimeFieldNumber;
const int gw_shortmsg::kCmdFieldNumber;
const int gw_shortmsg::kSndCmdFieldNumber;
const int gw_shortmsg::kSndSeqFieldNumber;
const int gw_shortmsg::kSndIdFieldNumber;
const int gw_shortmsg::kRcvIdFieldNumber;
const int gw_shortmsg::kOrgOrgaddrFieldNumber;
const int gw_shortmsg::kOrgDestaddrFieldNumber;
const int gw_shortmsg::kOrgFeeaddrFieldNumber;
const int gw_shortmsg::kOrgServicecodeFieldNumber;
const int gw_shortmsg::kOrgSpcodeFieldNumber;
const int gw_shortmsg::kDstOrgaddrFieldNumber;
const int gw_shortmsg::kDstDestaddrFieldNumber;
const int gw_shortmsg::kDstServicecodeFieldNumber;
const int gw_shortmsg::kDstSpcodeFieldNumber;
const int gw_shortmsg::kSrcIpFieldNumber;
const int gw_shortmsg::kSrcCodetypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

gw_shortmsg::gw_shortmsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_shortmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sm.gw_shortmsg)
}
gw_shortmsg::gw_shortmsg(const gw_shortmsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tlvs_(from.tlvs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  org_orgaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.org_orgaddr().size() > 0) {
    org_orgaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.org_orgaddr_);
  }
  org_destaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.org_destaddr().size() > 0) {
    org_destaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.org_destaddr_);
  }
  org_feeaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.org_feeaddr().size() > 0) {
    org_feeaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.org_feeaddr_);
  }
  org_servicecode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.org_servicecode().size() > 0) {
    org_servicecode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.org_servicecode_);
  }
  org_spcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.org_spcode().size() > 0) {
    org_spcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.org_spcode_);
  }
  dst_orgaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dst_orgaddr().size() > 0) {
    dst_orgaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dst_orgaddr_);
  }
  dst_destaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dst_destaddr().size() > 0) {
    dst_destaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dst_destaddr_);
  }
  dst_servicecode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dst_servicecode().size() > 0) {
    dst_servicecode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dst_servicecode_);
  }
  dst_spcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dst_spcode().size() > 0) {
    dst_spcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dst_spcode_);
  }
  src_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.src_ip().size() > 0) {
    src_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_ip_);
  }
  if (from.has_smdata()) {
    smdata_ = new ::sm::basedata(*from.smdata_);
  } else {
    smdata_ = NULL;
  }
  ::memcpy(&reply_end_, &from.reply_end_,
    reinterpret_cast<char*>(&src_codetype_) -
    reinterpret_cast<char*>(&reply_end_) + sizeof(src_codetype_));
  clear_has_lsm();
  switch (from.lsm_case()) {
    case kSubsms: {
      mutable_subsms()->::sm::longsm::MergeFrom(from.subsms());
      break;
    }
    case kSupersms: {
      mutable_supersms()->::sm::httplongsm::MergeFrom(from.supersms());
      break;
    }
    case LSM_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:sm.gw_shortmsg)
}

void gw_shortmsg::SharedCtor() {
  org_orgaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  org_destaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  org_feeaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  org_servicecode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  org_spcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dst_orgaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dst_destaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dst_servicecode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dst_spcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  src_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&smdata_, 0, reinterpret_cast<char*>(&src_codetype_) -
    reinterpret_cast<char*>(&smdata_) + sizeof(src_codetype_));
  clear_has_lsm();
  _cached_size_ = 0;
}

gw_shortmsg::~gw_shortmsg() {
  // @@protoc_insertion_point(destructor:sm.gw_shortmsg)
  SharedDtor();
}

void gw_shortmsg::SharedDtor() {
  org_orgaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  org_destaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  org_feeaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  org_servicecode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  org_spcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dst_orgaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dst_destaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dst_servicecode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dst_spcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  src_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete smdata_;
  }
  if (has_lsm()) {
    clear_lsm();
  }
}

void gw_shortmsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* gw_shortmsg::descriptor() {
  protobuf_shortmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_shortmsg_2eproto::file_level_metadata[5].descriptor;
}

const gw_shortmsg& gw_shortmsg::default_instance() {
  protobuf_shortmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

gw_shortmsg* gw_shortmsg::New(::google::protobuf::Arena* arena) const {
  gw_shortmsg* n = new gw_shortmsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void gw_shortmsg::clear_lsm() {
// @@protoc_insertion_point(one_of_clear_start:sm.gw_shortmsg)
  switch (lsm_case()) {
    case kSubsms: {
      delete lsm_.subsms_;
      break;
    }
    case kSupersms: {
      delete lsm_.supersms_;
      break;
    }
    case LSM_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = LSM_NOT_SET;
}


void gw_shortmsg::Clear() {
// @@protoc_insertion_point(message_clear_start:sm.gw_shortmsg)
  tlvs_.Clear();
  org_orgaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  org_destaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  org_feeaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  org_servicecode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  org_spcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dst_orgaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dst_destaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dst_servicecode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dst_spcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  src_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && smdata_ != NULL) {
    delete smdata_;
  }
  smdata_ = NULL;
  ::memset(&reply_end_, 0, reinterpret_cast<char*>(&src_codetype_) -
    reinterpret_cast<char*>(&reply_end_) + sizeof(src_codetype_));
  clear_lsm();
}

bool gw_shortmsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sm.gw_shortmsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sm.basedata smdata = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_smdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sm.tlv tlvs = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_tlvs()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // .sm.longsm subsms = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_subsms()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sm.httplongsm supersms = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_supersms()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 reply_end = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(320u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reply_end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 step = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(328u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &step_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 snd_count = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(336u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &snd_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 snd_flag = 43;
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(344u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &snd_flag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 submit_time = 44;
      case 44: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(352u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &submit_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cmd = 45;
      case 45: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(360u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 snd_cmd = 46;
      case 46: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(368u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &snd_cmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 snd_seq = 47;
      case 47: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(376u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &snd_seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 snd_id = 48;
      case 48: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(384u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &snd_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 rcv_id = 49;
      case 49: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(392u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rcv_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string org_orgaddr = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(402u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_org_orgaddr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->org_orgaddr().data(), this->org_orgaddr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sm.gw_shortmsg.org_orgaddr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string org_destaddr = 51;
      case 51: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(410u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_org_destaddr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->org_destaddr().data(), this->org_destaddr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sm.gw_shortmsg.org_destaddr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string org_feeaddr = 52;
      case 52: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(418u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_org_feeaddr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->org_feeaddr().data(), this->org_feeaddr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sm.gw_shortmsg.org_feeaddr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string org_servicecode = 53;
      case 53: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(426u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_org_servicecode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->org_servicecode().data(), this->org_servicecode().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sm.gw_shortmsg.org_servicecode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string org_spcode = 54;
      case 54: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(434u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_org_spcode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->org_spcode().data(), this->org_spcode().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sm.gw_shortmsg.org_spcode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dst_orgaddr = 55;
      case 55: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(442u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dst_orgaddr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dst_orgaddr().data(), this->dst_orgaddr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sm.gw_shortmsg.dst_orgaddr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dst_destaddr = 56;
      case 56: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(450u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dst_destaddr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dst_destaddr().data(), this->dst_destaddr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sm.gw_shortmsg.dst_destaddr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dst_servicecode = 57;
      case 57: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(458u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dst_servicecode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dst_servicecode().data(), this->dst_servicecode().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sm.gw_shortmsg.dst_servicecode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dst_spcode = 58;
      case 58: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(466u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dst_spcode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dst_spcode().data(), this->dst_spcode().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sm.gw_shortmsg.dst_spcode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string src_ip = 59;
      case 59: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(474u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_src_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->src_ip().data(), this->src_ip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sm.gw_shortmsg.src_ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 src_codetype = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(480u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &src_codetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sm.gw_shortmsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sm.gw_shortmsg)
  return false;
#undef DO_
}

void gw_shortmsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sm.gw_shortmsg)
  // .sm.basedata smdata = 20;
  if (this->has_smdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->smdata_, output);
  }

  // repeated .sm.tlv tlvs = 21;
  for (unsigned int i = 0, n = this->tlvs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->tlvs(i), output);
  }

  // .sm.longsm subsms = 22;
  if (has_subsms()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, *lsm_.subsms_, output);
  }

  // .sm.httplongsm supersms = 23;
  if (has_supersms()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, *lsm_.supersms_, output);
  }

  // int32 reply_end = 40;
  if (this->reply_end() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(40, this->reply_end(), output);
  }

  // int32 step = 41;
  if (this->step() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(41, this->step(), output);
  }

  // int32 snd_count = 42;
  if (this->snd_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(42, this->snd_count(), output);
  }

  // int32 snd_flag = 43;
  if (this->snd_flag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(43, this->snd_flag(), output);
  }

  // int64 submit_time = 44;
  if (this->submit_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(44, this->submit_time(), output);
  }

  // int32 cmd = 45;
  if (this->cmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(45, this->cmd(), output);
  }

  // int32 snd_cmd = 46;
  if (this->snd_cmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(46, this->snd_cmd(), output);
  }

  // int32 snd_seq = 47;
  if (this->snd_seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(47, this->snd_seq(), output);
  }

  // int32 snd_id = 48;
  if (this->snd_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(48, this->snd_id(), output);
  }

  // int32 rcv_id = 49;
  if (this->rcv_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(49, this->rcv_id(), output);
  }

  // string org_orgaddr = 50;
  if (this->org_orgaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->org_orgaddr().data(), this->org_orgaddr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sm.gw_shortmsg.org_orgaddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      50, this->org_orgaddr(), output);
  }

  // string org_destaddr = 51;
  if (this->org_destaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->org_destaddr().data(), this->org_destaddr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sm.gw_shortmsg.org_destaddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      51, this->org_destaddr(), output);
  }

  // string org_feeaddr = 52;
  if (this->org_feeaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->org_feeaddr().data(), this->org_feeaddr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sm.gw_shortmsg.org_feeaddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      52, this->org_feeaddr(), output);
  }

  // string org_servicecode = 53;
  if (this->org_servicecode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->org_servicecode().data(), this->org_servicecode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sm.gw_shortmsg.org_servicecode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      53, this->org_servicecode(), output);
  }

  // string org_spcode = 54;
  if (this->org_spcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->org_spcode().data(), this->org_spcode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sm.gw_shortmsg.org_spcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      54, this->org_spcode(), output);
  }

  // string dst_orgaddr = 55;
  if (this->dst_orgaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dst_orgaddr().data(), this->dst_orgaddr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sm.gw_shortmsg.dst_orgaddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      55, this->dst_orgaddr(), output);
  }

  // string dst_destaddr = 56;
  if (this->dst_destaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dst_destaddr().data(), this->dst_destaddr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sm.gw_shortmsg.dst_destaddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      56, this->dst_destaddr(), output);
  }

  // string dst_servicecode = 57;
  if (this->dst_servicecode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dst_servicecode().data(), this->dst_servicecode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sm.gw_shortmsg.dst_servicecode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      57, this->dst_servicecode(), output);
  }

  // string dst_spcode = 58;
  if (this->dst_spcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dst_spcode().data(), this->dst_spcode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sm.gw_shortmsg.dst_spcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      58, this->dst_spcode(), output);
  }

  // string src_ip = 59;
  if (this->src_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->src_ip().data(), this->src_ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sm.gw_shortmsg.src_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      59, this->src_ip(), output);
  }

  // int32 src_codetype = 60;
  if (this->src_codetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(60, this->src_codetype(), output);
  }

  // @@protoc_insertion_point(serialize_end:sm.gw_shortmsg)
}

::google::protobuf::uint8* gw_shortmsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sm.gw_shortmsg)
  // .sm.basedata smdata = 20;
  if (this->has_smdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, *this->smdata_, false, target);
  }

  // repeated .sm.tlv tlvs = 21;
  for (unsigned int i = 0, n = this->tlvs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        21, this->tlvs(i), false, target);
  }

  // .sm.longsm subsms = 22;
  if (has_subsms()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        22, *lsm_.subsms_, false, target);
  }

  // .sm.httplongsm supersms = 23;
  if (has_supersms()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        23, *lsm_.supersms_, false, target);
  }

  // int32 reply_end = 40;
  if (this->reply_end() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(40, this->reply_end(), target);
  }

  // int32 step = 41;
  if (this->step() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(41, this->step(), target);
  }

  // int32 snd_count = 42;
  if (this->snd_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(42, this->snd_count(), target);
  }

  // int32 snd_flag = 43;
  if (this->snd_flag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(43, this->snd_flag(), target);
  }

  // int64 submit_time = 44;
  if (this->submit_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(44, this->submit_time(), target);
  }

  // int32 cmd = 45;
  if (this->cmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(45, this->cmd(), target);
  }

  // int32 snd_cmd = 46;
  if (this->snd_cmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(46, this->snd_cmd(), target);
  }

  // int32 snd_seq = 47;
  if (this->snd_seq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(47, this->snd_seq(), target);
  }

  // int32 snd_id = 48;
  if (this->snd_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(48, this->snd_id(), target);
  }

  // int32 rcv_id = 49;
  if (this->rcv_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(49, this->rcv_id(), target);
  }

  // string org_orgaddr = 50;
  if (this->org_orgaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->org_orgaddr().data(), this->org_orgaddr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sm.gw_shortmsg.org_orgaddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        50, this->org_orgaddr(), target);
  }

  // string org_destaddr = 51;
  if (this->org_destaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->org_destaddr().data(), this->org_destaddr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sm.gw_shortmsg.org_destaddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        51, this->org_destaddr(), target);
  }

  // string org_feeaddr = 52;
  if (this->org_feeaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->org_feeaddr().data(), this->org_feeaddr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sm.gw_shortmsg.org_feeaddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        52, this->org_feeaddr(), target);
  }

  // string org_servicecode = 53;
  if (this->org_servicecode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->org_servicecode().data(), this->org_servicecode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sm.gw_shortmsg.org_servicecode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        53, this->org_servicecode(), target);
  }

  // string org_spcode = 54;
  if (this->org_spcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->org_spcode().data(), this->org_spcode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sm.gw_shortmsg.org_spcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        54, this->org_spcode(), target);
  }

  // string dst_orgaddr = 55;
  if (this->dst_orgaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dst_orgaddr().data(), this->dst_orgaddr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sm.gw_shortmsg.dst_orgaddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        55, this->dst_orgaddr(), target);
  }

  // string dst_destaddr = 56;
  if (this->dst_destaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dst_destaddr().data(), this->dst_destaddr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sm.gw_shortmsg.dst_destaddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        56, this->dst_destaddr(), target);
  }

  // string dst_servicecode = 57;
  if (this->dst_servicecode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dst_servicecode().data(), this->dst_servicecode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sm.gw_shortmsg.dst_servicecode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        57, this->dst_servicecode(), target);
  }

  // string dst_spcode = 58;
  if (this->dst_spcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dst_spcode().data(), this->dst_spcode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sm.gw_shortmsg.dst_spcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        58, this->dst_spcode(), target);
  }

  // string src_ip = 59;
  if (this->src_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->src_ip().data(), this->src_ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sm.gw_shortmsg.src_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        59, this->src_ip(), target);
  }

  // int32 src_codetype = 60;
  if (this->src_codetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(60, this->src_codetype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:sm.gw_shortmsg)
  return target;
}

size_t gw_shortmsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sm.gw_shortmsg)
  size_t total_size = 0;

  // repeated .sm.tlv tlvs = 21;
  {
    unsigned int count = this->tlvs_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tlvs(i));
    }
  }

  // string org_orgaddr = 50;
  if (this->org_orgaddr().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->org_orgaddr());
  }

  // string org_destaddr = 51;
  if (this->org_destaddr().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->org_destaddr());
  }

  // string org_feeaddr = 52;
  if (this->org_feeaddr().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->org_feeaddr());
  }

  // string org_servicecode = 53;
  if (this->org_servicecode().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->org_servicecode());
  }

  // string org_spcode = 54;
  if (this->org_spcode().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->org_spcode());
  }

  // string dst_orgaddr = 55;
  if (this->dst_orgaddr().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dst_orgaddr());
  }

  // string dst_destaddr = 56;
  if (this->dst_destaddr().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dst_destaddr());
  }

  // string dst_servicecode = 57;
  if (this->dst_servicecode().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dst_servicecode());
  }

  // string dst_spcode = 58;
  if (this->dst_spcode().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dst_spcode());
  }

  // string src_ip = 59;
  if (this->src_ip().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->src_ip());
  }

  // .sm.basedata smdata = 20;
  if (this->has_smdata()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->smdata_);
  }

  // int32 reply_end = 40;
  if (this->reply_end() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->reply_end());
  }

  // int32 step = 41;
  if (this->step() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->step());
  }

  // int32 snd_count = 42;
  if (this->snd_count() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->snd_count());
  }

  // int32 snd_flag = 43;
  if (this->snd_flag() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->snd_flag());
  }

  // int64 submit_time = 44;
  if (this->submit_time() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->submit_time());
  }

  // int32 cmd = 45;
  if (this->cmd() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cmd());
  }

  // int32 snd_cmd = 46;
  if (this->snd_cmd() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->snd_cmd());
  }

  // int32 snd_seq = 47;
  if (this->snd_seq() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->snd_seq());
  }

  // int32 snd_id = 48;
  if (this->snd_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->snd_id());
  }

  // int32 rcv_id = 49;
  if (this->rcv_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rcv_id());
  }

  // int32 src_codetype = 60;
  if (this->src_codetype() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->src_codetype());
  }

  switch (lsm_case()) {
    // .sm.longsm subsms = 22;
    case kSubsms: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *lsm_.subsms_);
      break;
    }
    // .sm.httplongsm supersms = 23;
    case kSupersms: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *lsm_.supersms_);
      break;
    }
    case LSM_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void gw_shortmsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sm.gw_shortmsg)
  GOOGLE_DCHECK_NE(&from, this);
  const gw_shortmsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const gw_shortmsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sm.gw_shortmsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sm.gw_shortmsg)
    MergeFrom(*source);
  }
}

void gw_shortmsg::MergeFrom(const gw_shortmsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sm.gw_shortmsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tlvs_.MergeFrom(from.tlvs_);
  if (from.org_orgaddr().size() > 0) {

    org_orgaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.org_orgaddr_);
  }
  if (from.org_destaddr().size() > 0) {

    org_destaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.org_destaddr_);
  }
  if (from.org_feeaddr().size() > 0) {

    org_feeaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.org_feeaddr_);
  }
  if (from.org_servicecode().size() > 0) {

    org_servicecode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.org_servicecode_);
  }
  if (from.org_spcode().size() > 0) {

    org_spcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.org_spcode_);
  }
  if (from.dst_orgaddr().size() > 0) {

    dst_orgaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dst_orgaddr_);
  }
  if (from.dst_destaddr().size() > 0) {

    dst_destaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dst_destaddr_);
  }
  if (from.dst_servicecode().size() > 0) {

    dst_servicecode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dst_servicecode_);
  }
  if (from.dst_spcode().size() > 0) {

    dst_spcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dst_spcode_);
  }
  if (from.src_ip().size() > 0) {

    src_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_ip_);
  }
  if (from.has_smdata()) {
    mutable_smdata()->::sm::basedata::MergeFrom(from.smdata());
  }
  if (from.reply_end() != 0) {
    set_reply_end(from.reply_end());
  }
  if (from.step() != 0) {
    set_step(from.step());
  }
  if (from.snd_count() != 0) {
    set_snd_count(from.snd_count());
  }
  if (from.snd_flag() != 0) {
    set_snd_flag(from.snd_flag());
  }
  if (from.submit_time() != 0) {
    set_submit_time(from.submit_time());
  }
  if (from.cmd() != 0) {
    set_cmd(from.cmd());
  }
  if (from.snd_cmd() != 0) {
    set_snd_cmd(from.snd_cmd());
  }
  if (from.snd_seq() != 0) {
    set_snd_seq(from.snd_seq());
  }
  if (from.snd_id() != 0) {
    set_snd_id(from.snd_id());
  }
  if (from.rcv_id() != 0) {
    set_rcv_id(from.rcv_id());
  }
  if (from.src_codetype() != 0) {
    set_src_codetype(from.src_codetype());
  }
  switch (from.lsm_case()) {
    case kSubsms: {
      mutable_subsms()->::sm::longsm::MergeFrom(from.subsms());
      break;
    }
    case kSupersms: {
      mutable_supersms()->::sm::httplongsm::MergeFrom(from.supersms());
      break;
    }
    case LSM_NOT_SET: {
      break;
    }
  }
}

void gw_shortmsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sm.gw_shortmsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gw_shortmsg::CopyFrom(const gw_shortmsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sm.gw_shortmsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gw_shortmsg::IsInitialized() const {
  return true;
}

void gw_shortmsg::Swap(gw_shortmsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gw_shortmsg::InternalSwap(gw_shortmsg* other) {
  tlvs_.UnsafeArenaSwap(&other->tlvs_);
  org_orgaddr_.Swap(&other->org_orgaddr_);
  org_destaddr_.Swap(&other->org_destaddr_);
  org_feeaddr_.Swap(&other->org_feeaddr_);
  org_servicecode_.Swap(&other->org_servicecode_);
  org_spcode_.Swap(&other->org_spcode_);
  dst_orgaddr_.Swap(&other->dst_orgaddr_);
  dst_destaddr_.Swap(&other->dst_destaddr_);
  dst_servicecode_.Swap(&other->dst_servicecode_);
  dst_spcode_.Swap(&other->dst_spcode_);
  src_ip_.Swap(&other->src_ip_);
  std::swap(smdata_, other->smdata_);
  std::swap(reply_end_, other->reply_end_);
  std::swap(step_, other->step_);
  std::swap(snd_count_, other->snd_count_);
  std::swap(snd_flag_, other->snd_flag_);
  std::swap(submit_time_, other->submit_time_);
  std::swap(cmd_, other->cmd_);
  std::swap(snd_cmd_, other->snd_cmd_);
  std::swap(snd_seq_, other->snd_seq_);
  std::swap(snd_id_, other->snd_id_);
  std::swap(rcv_id_, other->rcv_id_);
  std::swap(src_codetype_, other->src_codetype_);
  std::swap(lsm_, other->lsm_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata gw_shortmsg::GetMetadata() const {
  protobuf_shortmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_shortmsg_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// gw_shortmsg

// .sm.basedata smdata = 20;
bool gw_shortmsg::has_smdata() const {
  return this != internal_default_instance() && smdata_ != NULL;
}
void gw_shortmsg::clear_smdata() {
  if (GetArenaNoVirtual() == NULL && smdata_ != NULL) delete smdata_;
  smdata_ = NULL;
}
const ::sm::basedata& gw_shortmsg::smdata() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.smdata)
  return smdata_ != NULL ? *smdata_
                         : *::sm::basedata::internal_default_instance();
}
::sm::basedata* gw_shortmsg::mutable_smdata() {
  
  if (smdata_ == NULL) {
    smdata_ = new ::sm::basedata;
  }
  // @@protoc_insertion_point(field_mutable:sm.gw_shortmsg.smdata)
  return smdata_;
}
::sm::basedata* gw_shortmsg::release_smdata() {
  // @@protoc_insertion_point(field_release:sm.gw_shortmsg.smdata)
  
  ::sm::basedata* temp = smdata_;
  smdata_ = NULL;
  return temp;
}
void gw_shortmsg::set_allocated_smdata(::sm::basedata* smdata) {
  delete smdata_;
  smdata_ = smdata;
  if (smdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sm.gw_shortmsg.smdata)
}

// repeated .sm.tlv tlvs = 21;
int gw_shortmsg::tlvs_size() const {
  return tlvs_.size();
}
void gw_shortmsg::clear_tlvs() {
  tlvs_.Clear();
}
const ::sm::tlv& gw_shortmsg::tlvs(int index) const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.tlvs)
  return tlvs_.Get(index);
}
::sm::tlv* gw_shortmsg::mutable_tlvs(int index) {
  // @@protoc_insertion_point(field_mutable:sm.gw_shortmsg.tlvs)
  return tlvs_.Mutable(index);
}
::sm::tlv* gw_shortmsg::add_tlvs() {
  // @@protoc_insertion_point(field_add:sm.gw_shortmsg.tlvs)
  return tlvs_.Add();
}
::google::protobuf::RepeatedPtrField< ::sm::tlv >*
gw_shortmsg::mutable_tlvs() {
  // @@protoc_insertion_point(field_mutable_list:sm.gw_shortmsg.tlvs)
  return &tlvs_;
}
const ::google::protobuf::RepeatedPtrField< ::sm::tlv >&
gw_shortmsg::tlvs() const {
  // @@protoc_insertion_point(field_list:sm.gw_shortmsg.tlvs)
  return tlvs_;
}

// .sm.longsm subsms = 22;
bool gw_shortmsg::has_subsms() const {
  return lsm_case() == kSubsms;
}
void gw_shortmsg::set_has_subsms() {
  _oneof_case_[0] = kSubsms;
}
void gw_shortmsg::clear_subsms() {
  if (has_subsms()) {
    delete lsm_.subsms_;
    clear_has_lsm();
  }
}
 const ::sm::longsm& gw_shortmsg::subsms() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.subsms)
  return has_subsms()
      ? *lsm_.subsms_
      : ::sm::longsm::default_instance();
}
::sm::longsm* gw_shortmsg::mutable_subsms() {
  if (!has_subsms()) {
    clear_lsm();
    set_has_subsms();
    lsm_.subsms_ = new ::sm::longsm;
  }
  // @@protoc_insertion_point(field_mutable:sm.gw_shortmsg.subsms)
  return lsm_.subsms_;
}
::sm::longsm* gw_shortmsg::release_subsms() {
  // @@protoc_insertion_point(field_release:sm.gw_shortmsg.subsms)
  if (has_subsms()) {
    clear_has_lsm();
    ::sm::longsm* temp = lsm_.subsms_;
    lsm_.subsms_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void gw_shortmsg::set_allocated_subsms(::sm::longsm* subsms) {
  clear_lsm();
  if (subsms) {
    set_has_subsms();
    lsm_.subsms_ = subsms;
  }
  // @@protoc_insertion_point(field_set_allocated:sm.gw_shortmsg.subsms)
}

// .sm.httplongsm supersms = 23;
bool gw_shortmsg::has_supersms() const {
  return lsm_case() == kSupersms;
}
void gw_shortmsg::set_has_supersms() {
  _oneof_case_[0] = kSupersms;
}
void gw_shortmsg::clear_supersms() {
  if (has_supersms()) {
    delete lsm_.supersms_;
    clear_has_lsm();
  }
}
 const ::sm::httplongsm& gw_shortmsg::supersms() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.supersms)
  return has_supersms()
      ? *lsm_.supersms_
      : ::sm::httplongsm::default_instance();
}
::sm::httplongsm* gw_shortmsg::mutable_supersms() {
  if (!has_supersms()) {
    clear_lsm();
    set_has_supersms();
    lsm_.supersms_ = new ::sm::httplongsm;
  }
  // @@protoc_insertion_point(field_mutable:sm.gw_shortmsg.supersms)
  return lsm_.supersms_;
}
::sm::httplongsm* gw_shortmsg::release_supersms() {
  // @@protoc_insertion_point(field_release:sm.gw_shortmsg.supersms)
  if (has_supersms()) {
    clear_has_lsm();
    ::sm::httplongsm* temp = lsm_.supersms_;
    lsm_.supersms_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void gw_shortmsg::set_allocated_supersms(::sm::httplongsm* supersms) {
  clear_lsm();
  if (supersms) {
    set_has_supersms();
    lsm_.supersms_ = supersms;
  }
  // @@protoc_insertion_point(field_set_allocated:sm.gw_shortmsg.supersms)
}

// int32 reply_end = 40;
void gw_shortmsg::clear_reply_end() {
  reply_end_ = 0;
}
::google::protobuf::int32 gw_shortmsg::reply_end() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.reply_end)
  return reply_end_;
}
void gw_shortmsg::set_reply_end(::google::protobuf::int32 value) {
  
  reply_end_ = value;
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.reply_end)
}

// int32 step = 41;
void gw_shortmsg::clear_step() {
  step_ = 0;
}
::google::protobuf::int32 gw_shortmsg::step() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.step)
  return step_;
}
void gw_shortmsg::set_step(::google::protobuf::int32 value) {
  
  step_ = value;
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.step)
}

// int32 snd_count = 42;
void gw_shortmsg::clear_snd_count() {
  snd_count_ = 0;
}
::google::protobuf::int32 gw_shortmsg::snd_count() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.snd_count)
  return snd_count_;
}
void gw_shortmsg::set_snd_count(::google::protobuf::int32 value) {
  
  snd_count_ = value;
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.snd_count)
}

// int32 snd_flag = 43;
void gw_shortmsg::clear_snd_flag() {
  snd_flag_ = 0;
}
::google::protobuf::int32 gw_shortmsg::snd_flag() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.snd_flag)
  return snd_flag_;
}
void gw_shortmsg::set_snd_flag(::google::protobuf::int32 value) {
  
  snd_flag_ = value;
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.snd_flag)
}

// int64 submit_time = 44;
void gw_shortmsg::clear_submit_time() {
  submit_time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 gw_shortmsg::submit_time() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.submit_time)
  return submit_time_;
}
void gw_shortmsg::set_submit_time(::google::protobuf::int64 value) {
  
  submit_time_ = value;
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.submit_time)
}

// int32 cmd = 45;
void gw_shortmsg::clear_cmd() {
  cmd_ = 0;
}
::google::protobuf::int32 gw_shortmsg::cmd() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.cmd)
  return cmd_;
}
void gw_shortmsg::set_cmd(::google::protobuf::int32 value) {
  
  cmd_ = value;
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.cmd)
}

// int32 snd_cmd = 46;
void gw_shortmsg::clear_snd_cmd() {
  snd_cmd_ = 0;
}
::google::protobuf::int32 gw_shortmsg::snd_cmd() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.snd_cmd)
  return snd_cmd_;
}
void gw_shortmsg::set_snd_cmd(::google::protobuf::int32 value) {
  
  snd_cmd_ = value;
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.snd_cmd)
}

// int32 snd_seq = 47;
void gw_shortmsg::clear_snd_seq() {
  snd_seq_ = 0;
}
::google::protobuf::int32 gw_shortmsg::snd_seq() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.snd_seq)
  return snd_seq_;
}
void gw_shortmsg::set_snd_seq(::google::protobuf::int32 value) {
  
  snd_seq_ = value;
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.snd_seq)
}

// int32 snd_id = 48;
void gw_shortmsg::clear_snd_id() {
  snd_id_ = 0;
}
::google::protobuf::int32 gw_shortmsg::snd_id() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.snd_id)
  return snd_id_;
}
void gw_shortmsg::set_snd_id(::google::protobuf::int32 value) {
  
  snd_id_ = value;
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.snd_id)
}

// int32 rcv_id = 49;
void gw_shortmsg::clear_rcv_id() {
  rcv_id_ = 0;
}
::google::protobuf::int32 gw_shortmsg::rcv_id() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.rcv_id)
  return rcv_id_;
}
void gw_shortmsg::set_rcv_id(::google::protobuf::int32 value) {
  
  rcv_id_ = value;
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.rcv_id)
}

// string org_orgaddr = 50;
void gw_shortmsg::clear_org_orgaddr() {
  org_orgaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& gw_shortmsg::org_orgaddr() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.org_orgaddr)
  return org_orgaddr_.GetNoArena();
}
void gw_shortmsg::set_org_orgaddr(const ::std::string& value) {
  
  org_orgaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.org_orgaddr)
}
#if LANG_CXX11
void gw_shortmsg::set_org_orgaddr(::std::string&& value) {
  
  org_orgaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sm.gw_shortmsg.org_orgaddr)
}
#endif
void gw_shortmsg::set_org_orgaddr(const char* value) {
  
  org_orgaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sm.gw_shortmsg.org_orgaddr)
}
void gw_shortmsg::set_org_orgaddr(const char* value, size_t size) {
  
  org_orgaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sm.gw_shortmsg.org_orgaddr)
}
::std::string* gw_shortmsg::mutable_org_orgaddr() {
  
  // @@protoc_insertion_point(field_mutable:sm.gw_shortmsg.org_orgaddr)
  return org_orgaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* gw_shortmsg::release_org_orgaddr() {
  // @@protoc_insertion_point(field_release:sm.gw_shortmsg.org_orgaddr)
  
  return org_orgaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void gw_shortmsg::set_allocated_org_orgaddr(::std::string* org_orgaddr) {
  if (org_orgaddr != NULL) {
    
  } else {
    
  }
  org_orgaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), org_orgaddr);
  // @@protoc_insertion_point(field_set_allocated:sm.gw_shortmsg.org_orgaddr)
}

// string org_destaddr = 51;
void gw_shortmsg::clear_org_destaddr() {
  org_destaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& gw_shortmsg::org_destaddr() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.org_destaddr)
  return org_destaddr_.GetNoArena();
}
void gw_shortmsg::set_org_destaddr(const ::std::string& value) {
  
  org_destaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.org_destaddr)
}
#if LANG_CXX11
void gw_shortmsg::set_org_destaddr(::std::string&& value) {
  
  org_destaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sm.gw_shortmsg.org_destaddr)
}
#endif
void gw_shortmsg::set_org_destaddr(const char* value) {
  
  org_destaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sm.gw_shortmsg.org_destaddr)
}
void gw_shortmsg::set_org_destaddr(const char* value, size_t size) {
  
  org_destaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sm.gw_shortmsg.org_destaddr)
}
::std::string* gw_shortmsg::mutable_org_destaddr() {
  
  // @@protoc_insertion_point(field_mutable:sm.gw_shortmsg.org_destaddr)
  return org_destaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* gw_shortmsg::release_org_destaddr() {
  // @@protoc_insertion_point(field_release:sm.gw_shortmsg.org_destaddr)
  
  return org_destaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void gw_shortmsg::set_allocated_org_destaddr(::std::string* org_destaddr) {
  if (org_destaddr != NULL) {
    
  } else {
    
  }
  org_destaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), org_destaddr);
  // @@protoc_insertion_point(field_set_allocated:sm.gw_shortmsg.org_destaddr)
}

// string org_feeaddr = 52;
void gw_shortmsg::clear_org_feeaddr() {
  org_feeaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& gw_shortmsg::org_feeaddr() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.org_feeaddr)
  return org_feeaddr_.GetNoArena();
}
void gw_shortmsg::set_org_feeaddr(const ::std::string& value) {
  
  org_feeaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.org_feeaddr)
}
#if LANG_CXX11
void gw_shortmsg::set_org_feeaddr(::std::string&& value) {
  
  org_feeaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sm.gw_shortmsg.org_feeaddr)
}
#endif
void gw_shortmsg::set_org_feeaddr(const char* value) {
  
  org_feeaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sm.gw_shortmsg.org_feeaddr)
}
void gw_shortmsg::set_org_feeaddr(const char* value, size_t size) {
  
  org_feeaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sm.gw_shortmsg.org_feeaddr)
}
::std::string* gw_shortmsg::mutable_org_feeaddr() {
  
  // @@protoc_insertion_point(field_mutable:sm.gw_shortmsg.org_feeaddr)
  return org_feeaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* gw_shortmsg::release_org_feeaddr() {
  // @@protoc_insertion_point(field_release:sm.gw_shortmsg.org_feeaddr)
  
  return org_feeaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void gw_shortmsg::set_allocated_org_feeaddr(::std::string* org_feeaddr) {
  if (org_feeaddr != NULL) {
    
  } else {
    
  }
  org_feeaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), org_feeaddr);
  // @@protoc_insertion_point(field_set_allocated:sm.gw_shortmsg.org_feeaddr)
}

// string org_servicecode = 53;
void gw_shortmsg::clear_org_servicecode() {
  org_servicecode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& gw_shortmsg::org_servicecode() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.org_servicecode)
  return org_servicecode_.GetNoArena();
}
void gw_shortmsg::set_org_servicecode(const ::std::string& value) {
  
  org_servicecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.org_servicecode)
}
#if LANG_CXX11
void gw_shortmsg::set_org_servicecode(::std::string&& value) {
  
  org_servicecode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sm.gw_shortmsg.org_servicecode)
}
#endif
void gw_shortmsg::set_org_servicecode(const char* value) {
  
  org_servicecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sm.gw_shortmsg.org_servicecode)
}
void gw_shortmsg::set_org_servicecode(const char* value, size_t size) {
  
  org_servicecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sm.gw_shortmsg.org_servicecode)
}
::std::string* gw_shortmsg::mutable_org_servicecode() {
  
  // @@protoc_insertion_point(field_mutable:sm.gw_shortmsg.org_servicecode)
  return org_servicecode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* gw_shortmsg::release_org_servicecode() {
  // @@protoc_insertion_point(field_release:sm.gw_shortmsg.org_servicecode)
  
  return org_servicecode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void gw_shortmsg::set_allocated_org_servicecode(::std::string* org_servicecode) {
  if (org_servicecode != NULL) {
    
  } else {
    
  }
  org_servicecode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), org_servicecode);
  // @@protoc_insertion_point(field_set_allocated:sm.gw_shortmsg.org_servicecode)
}

// string org_spcode = 54;
void gw_shortmsg::clear_org_spcode() {
  org_spcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& gw_shortmsg::org_spcode() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.org_spcode)
  return org_spcode_.GetNoArena();
}
void gw_shortmsg::set_org_spcode(const ::std::string& value) {
  
  org_spcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.org_spcode)
}
#if LANG_CXX11
void gw_shortmsg::set_org_spcode(::std::string&& value) {
  
  org_spcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sm.gw_shortmsg.org_spcode)
}
#endif
void gw_shortmsg::set_org_spcode(const char* value) {
  
  org_spcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sm.gw_shortmsg.org_spcode)
}
void gw_shortmsg::set_org_spcode(const char* value, size_t size) {
  
  org_spcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sm.gw_shortmsg.org_spcode)
}
::std::string* gw_shortmsg::mutable_org_spcode() {
  
  // @@protoc_insertion_point(field_mutable:sm.gw_shortmsg.org_spcode)
  return org_spcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* gw_shortmsg::release_org_spcode() {
  // @@protoc_insertion_point(field_release:sm.gw_shortmsg.org_spcode)
  
  return org_spcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void gw_shortmsg::set_allocated_org_spcode(::std::string* org_spcode) {
  if (org_spcode != NULL) {
    
  } else {
    
  }
  org_spcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), org_spcode);
  // @@protoc_insertion_point(field_set_allocated:sm.gw_shortmsg.org_spcode)
}

// string dst_orgaddr = 55;
void gw_shortmsg::clear_dst_orgaddr() {
  dst_orgaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& gw_shortmsg::dst_orgaddr() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.dst_orgaddr)
  return dst_orgaddr_.GetNoArena();
}
void gw_shortmsg::set_dst_orgaddr(const ::std::string& value) {
  
  dst_orgaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.dst_orgaddr)
}
#if LANG_CXX11
void gw_shortmsg::set_dst_orgaddr(::std::string&& value) {
  
  dst_orgaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sm.gw_shortmsg.dst_orgaddr)
}
#endif
void gw_shortmsg::set_dst_orgaddr(const char* value) {
  
  dst_orgaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sm.gw_shortmsg.dst_orgaddr)
}
void gw_shortmsg::set_dst_orgaddr(const char* value, size_t size) {
  
  dst_orgaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sm.gw_shortmsg.dst_orgaddr)
}
::std::string* gw_shortmsg::mutable_dst_orgaddr() {
  
  // @@protoc_insertion_point(field_mutable:sm.gw_shortmsg.dst_orgaddr)
  return dst_orgaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* gw_shortmsg::release_dst_orgaddr() {
  // @@protoc_insertion_point(field_release:sm.gw_shortmsg.dst_orgaddr)
  
  return dst_orgaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void gw_shortmsg::set_allocated_dst_orgaddr(::std::string* dst_orgaddr) {
  if (dst_orgaddr != NULL) {
    
  } else {
    
  }
  dst_orgaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dst_orgaddr);
  // @@protoc_insertion_point(field_set_allocated:sm.gw_shortmsg.dst_orgaddr)
}

// string dst_destaddr = 56;
void gw_shortmsg::clear_dst_destaddr() {
  dst_destaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& gw_shortmsg::dst_destaddr() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.dst_destaddr)
  return dst_destaddr_.GetNoArena();
}
void gw_shortmsg::set_dst_destaddr(const ::std::string& value) {
  
  dst_destaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.dst_destaddr)
}
#if LANG_CXX11
void gw_shortmsg::set_dst_destaddr(::std::string&& value) {
  
  dst_destaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sm.gw_shortmsg.dst_destaddr)
}
#endif
void gw_shortmsg::set_dst_destaddr(const char* value) {
  
  dst_destaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sm.gw_shortmsg.dst_destaddr)
}
void gw_shortmsg::set_dst_destaddr(const char* value, size_t size) {
  
  dst_destaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sm.gw_shortmsg.dst_destaddr)
}
::std::string* gw_shortmsg::mutable_dst_destaddr() {
  
  // @@protoc_insertion_point(field_mutable:sm.gw_shortmsg.dst_destaddr)
  return dst_destaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* gw_shortmsg::release_dst_destaddr() {
  // @@protoc_insertion_point(field_release:sm.gw_shortmsg.dst_destaddr)
  
  return dst_destaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void gw_shortmsg::set_allocated_dst_destaddr(::std::string* dst_destaddr) {
  if (dst_destaddr != NULL) {
    
  } else {
    
  }
  dst_destaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dst_destaddr);
  // @@protoc_insertion_point(field_set_allocated:sm.gw_shortmsg.dst_destaddr)
}

// string dst_servicecode = 57;
void gw_shortmsg::clear_dst_servicecode() {
  dst_servicecode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& gw_shortmsg::dst_servicecode() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.dst_servicecode)
  return dst_servicecode_.GetNoArena();
}
void gw_shortmsg::set_dst_servicecode(const ::std::string& value) {
  
  dst_servicecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.dst_servicecode)
}
#if LANG_CXX11
void gw_shortmsg::set_dst_servicecode(::std::string&& value) {
  
  dst_servicecode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sm.gw_shortmsg.dst_servicecode)
}
#endif
void gw_shortmsg::set_dst_servicecode(const char* value) {
  
  dst_servicecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sm.gw_shortmsg.dst_servicecode)
}
void gw_shortmsg::set_dst_servicecode(const char* value, size_t size) {
  
  dst_servicecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sm.gw_shortmsg.dst_servicecode)
}
::std::string* gw_shortmsg::mutable_dst_servicecode() {
  
  // @@protoc_insertion_point(field_mutable:sm.gw_shortmsg.dst_servicecode)
  return dst_servicecode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* gw_shortmsg::release_dst_servicecode() {
  // @@protoc_insertion_point(field_release:sm.gw_shortmsg.dst_servicecode)
  
  return dst_servicecode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void gw_shortmsg::set_allocated_dst_servicecode(::std::string* dst_servicecode) {
  if (dst_servicecode != NULL) {
    
  } else {
    
  }
  dst_servicecode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dst_servicecode);
  // @@protoc_insertion_point(field_set_allocated:sm.gw_shortmsg.dst_servicecode)
}

// string dst_spcode = 58;
void gw_shortmsg::clear_dst_spcode() {
  dst_spcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& gw_shortmsg::dst_spcode() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.dst_spcode)
  return dst_spcode_.GetNoArena();
}
void gw_shortmsg::set_dst_spcode(const ::std::string& value) {
  
  dst_spcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.dst_spcode)
}
#if LANG_CXX11
void gw_shortmsg::set_dst_spcode(::std::string&& value) {
  
  dst_spcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sm.gw_shortmsg.dst_spcode)
}
#endif
void gw_shortmsg::set_dst_spcode(const char* value) {
  
  dst_spcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sm.gw_shortmsg.dst_spcode)
}
void gw_shortmsg::set_dst_spcode(const char* value, size_t size) {
  
  dst_spcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sm.gw_shortmsg.dst_spcode)
}
::std::string* gw_shortmsg::mutable_dst_spcode() {
  
  // @@protoc_insertion_point(field_mutable:sm.gw_shortmsg.dst_spcode)
  return dst_spcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* gw_shortmsg::release_dst_spcode() {
  // @@protoc_insertion_point(field_release:sm.gw_shortmsg.dst_spcode)
  
  return dst_spcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void gw_shortmsg::set_allocated_dst_spcode(::std::string* dst_spcode) {
  if (dst_spcode != NULL) {
    
  } else {
    
  }
  dst_spcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dst_spcode);
  // @@protoc_insertion_point(field_set_allocated:sm.gw_shortmsg.dst_spcode)
}

// string src_ip = 59;
void gw_shortmsg::clear_src_ip() {
  src_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& gw_shortmsg::src_ip() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.src_ip)
  return src_ip_.GetNoArena();
}
void gw_shortmsg::set_src_ip(const ::std::string& value) {
  
  src_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.src_ip)
}
#if LANG_CXX11
void gw_shortmsg::set_src_ip(::std::string&& value) {
  
  src_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sm.gw_shortmsg.src_ip)
}
#endif
void gw_shortmsg::set_src_ip(const char* value) {
  
  src_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sm.gw_shortmsg.src_ip)
}
void gw_shortmsg::set_src_ip(const char* value, size_t size) {
  
  src_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sm.gw_shortmsg.src_ip)
}
::std::string* gw_shortmsg::mutable_src_ip() {
  
  // @@protoc_insertion_point(field_mutable:sm.gw_shortmsg.src_ip)
  return src_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* gw_shortmsg::release_src_ip() {
  // @@protoc_insertion_point(field_release:sm.gw_shortmsg.src_ip)
  
  return src_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void gw_shortmsg::set_allocated_src_ip(::std::string* src_ip) {
  if (src_ip != NULL) {
    
  } else {
    
  }
  src_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), src_ip);
  // @@protoc_insertion_point(field_set_allocated:sm.gw_shortmsg.src_ip)
}

// int32 src_codetype = 60;
void gw_shortmsg::clear_src_codetype() {
  src_codetype_ = 0;
}
::google::protobuf::int32 gw_shortmsg::src_codetype() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.src_codetype)
  return src_codetype_;
}
void gw_shortmsg::set_src_codetype(::google::protobuf::int32 value) {
  
  src_codetype_ = value;
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.src_codetype)
}

bool gw_shortmsg::has_lsm() const {
  return lsm_case() != LSM_NOT_SET;
}
void gw_shortmsg::clear_has_lsm() {
  _oneof_case_[0] = LSM_NOT_SET;
}
gw_shortmsg::LsmCase gw_shortmsg::lsm_case() const {
  return gw_shortmsg::LsmCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace sm

// @@protoc_insertion_point(global_scope)
