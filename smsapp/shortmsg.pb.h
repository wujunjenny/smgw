// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: shortmsg.proto

#ifndef PROTOBUF_shortmsg_2eproto__INCLUDED
#define PROTOBUF_shortmsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace sm {
class basedata;
class basedataDefaultTypeInternal;
extern basedataDefaultTypeInternal _basedata_default_instance_;
class gw_shortmsg;
class gw_shortmsgDefaultTypeInternal;
extern gw_shortmsgDefaultTypeInternal _gw_shortmsg_default_instance_;
class httplongsm;
class httplongsmDefaultTypeInternal;
extern httplongsmDefaultTypeInternal _httplongsm_default_instance_;
class longsm;
class longsmDefaultTypeInternal;
extern longsmDefaultTypeInternal _longsm_default_instance_;
class tlv;
class tlvDefaultTypeInternal;
extern tlvDefaultTypeInternal _tlv_default_instance_;
}  // namespace sm

namespace sm {

namespace protobuf_shortmsg_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_shortmsg_2eproto

// ===================================================================

class basedata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sm.basedata) */ {
 public:
  basedata();
  virtual ~basedata();

  basedata(const basedata& from);

  inline basedata& operator=(const basedata& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const basedata& default_instance();

  static inline const basedata* internal_default_instance() {
    return reinterpret_cast<const basedata*>(
               &_basedata_default_instance_);
  }

  void Swap(basedata* other);

  // implements Message ----------------------------------------------

  inline basedata* New() const PROTOBUF_FINAL { return New(NULL); }

  basedata* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const basedata& from);
  void MergeFrom(const basedata& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(basedata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string sndaddr = 1;
  void clear_sndaddr();
  static const int kSndaddrFieldNumber = 1;
  const ::std::string& sndaddr() const;
  void set_sndaddr(const ::std::string& value);
  #if LANG_CXX11
  void set_sndaddr(::std::string&& value);
  #endif
  void set_sndaddr(const char* value);
  void set_sndaddr(const char* value, size_t size);
  ::std::string* mutable_sndaddr();
  ::std::string* release_sndaddr();
  void set_allocated_sndaddr(::std::string* sndaddr);

  // string rcvaddr = 4;
  void clear_rcvaddr();
  static const int kRcvaddrFieldNumber = 4;
  const ::std::string& rcvaddr() const;
  void set_rcvaddr(const ::std::string& value);
  #if LANG_CXX11
  void set_rcvaddr(::std::string&& value);
  #endif
  void set_rcvaddr(const char* value);
  void set_rcvaddr(const char* value, size_t size);
  ::std::string* mutable_rcvaddr();
  ::std::string* release_rcvaddr();
  void set_allocated_rcvaddr(::std::string* rcvaddr);

  // string scheduletime = 10;
  void clear_scheduletime();
  static const int kScheduletimeFieldNumber = 10;
  const ::std::string& scheduletime() const;
  void set_scheduletime(const ::std::string& value);
  #if LANG_CXX11
  void set_scheduletime(::std::string&& value);
  #endif
  void set_scheduletime(const char* value);
  void set_scheduletime(const char* value, size_t size);
  ::std::string* mutable_scheduletime();
  ::std::string* release_scheduletime();
  void set_allocated_scheduletime(::std::string* scheduletime);

  // string expiretime = 11;
  void clear_expiretime();
  static const int kExpiretimeFieldNumber = 11;
  const ::std::string& expiretime() const;
  void set_expiretime(const ::std::string& value);
  #if LANG_CXX11
  void set_expiretime(::std::string&& value);
  #endif
  void set_expiretime(const char* value);
  void set_expiretime(const char* value, size_t size);
  ::std::string* mutable_expiretime();
  ::std::string* release_expiretime();
  void set_allocated_expiretime(::std::string* expiretime);

  // bytes content = 14;
  void clear_content();
  static const int kContentFieldNumber = 14;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // int32 sndton = 2;
  void clear_sndton();
  static const int kSndtonFieldNumber = 2;
  ::google::protobuf::int32 sndton() const;
  void set_sndton(::google::protobuf::int32 value);

  // int32 sndnpi = 3;
  void clear_sndnpi();
  static const int kSndnpiFieldNumber = 3;
  ::google::protobuf::int32 sndnpi() const;
  void set_sndnpi(::google::protobuf::int32 value);

  // int32 rcvton = 5;
  void clear_rcvton();
  static const int kRcvtonFieldNumber = 5;
  ::google::protobuf::int32 rcvton() const;
  void set_rcvton(::google::protobuf::int32 value);

  // int32 rcvnpi = 6;
  void clear_rcvnpi();
  static const int kRcvnpiFieldNumber = 6;
  ::google::protobuf::int32 rcvnpi() const;
  void set_rcvnpi(::google::protobuf::int32 value);

  // int32 ems_class = 7;
  void clear_ems_class();
  static const int kEmsClassFieldNumber = 7;
  ::google::protobuf::int32 ems_class() const;
  void set_ems_class(::google::protobuf::int32 value);

  // int32 pri = 8;
  void clear_pri();
  static const int kPriFieldNumber = 8;
  ::google::protobuf::int32 pri() const;
  void set_pri(::google::protobuf::int32 value);

  // int32 pid = 9;
  void clear_pid();
  static const int kPidFieldNumber = 9;
  ::google::protobuf::int32 pid() const;
  void set_pid(::google::protobuf::int32 value);

  // int32 reporttype = 12;
  void clear_reporttype();
  static const int kReporttypeFieldNumber = 12;
  ::google::protobuf::int32 reporttype() const;
  void set_reporttype(::google::protobuf::int32 value);

  // int32 dcs = 13;
  void clear_dcs();
  static const int kDcsFieldNumber = 13;
  ::google::protobuf::int32 dcs() const;
  void set_dcs(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:sm.basedata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr sndaddr_;
  ::google::protobuf::internal::ArenaStringPtr rcvaddr_;
  ::google::protobuf::internal::ArenaStringPtr scheduletime_;
  ::google::protobuf::internal::ArenaStringPtr expiretime_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::int32 sndton_;
  ::google::protobuf::int32 sndnpi_;
  ::google::protobuf::int32 rcvton_;
  ::google::protobuf::int32 rcvnpi_;
  ::google::protobuf::int32 ems_class_;
  ::google::protobuf::int32 pri_;
  ::google::protobuf::int32 pid_;
  ::google::protobuf::int32 reporttype_;
  ::google::protobuf::int32 dcs_;
  mutable int _cached_size_;
  friend struct protobuf_shortmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class tlv : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sm.tlv) */ {
 public:
  tlv();
  virtual ~tlv();

  tlv(const tlv& from);

  inline tlv& operator=(const tlv& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tlv& default_instance();

  enum ValueCase {
    kIvalue = 2,
    kSvalue = 3,
    kBvalue = 4,
    VALUE_NOT_SET = 0,
  };

  static inline const tlv* internal_default_instance() {
    return reinterpret_cast<const tlv*>(
               &_tlv_default_instance_);
  }

  void Swap(tlv* other);

  // implements Message ----------------------------------------------

  inline tlv* New() const PROTOBUF_FINAL { return New(NULL); }

  tlv* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const tlv& from);
  void MergeFrom(const tlv& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(tlv* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 tlv_type = 1;
  void clear_tlv_type();
  static const int kTlvTypeFieldNumber = 1;
  ::google::protobuf::int32 tlv_type() const;
  void set_tlv_type(::google::protobuf::int32 value);

  // int32 ivalue = 2;
  private:
  bool has_ivalue() const;
  public:
  void clear_ivalue();
  static const int kIvalueFieldNumber = 2;
  ::google::protobuf::int32 ivalue() const;
  void set_ivalue(::google::protobuf::int32 value);

  // string svalue = 3;
  private:
  bool has_svalue() const;
  public:
  void clear_svalue();
  static const int kSvalueFieldNumber = 3;
  const ::std::string& svalue() const;
  void set_svalue(const ::std::string& value);
  #if LANG_CXX11
  void set_svalue(::std::string&& value);
  #endif
  void set_svalue(const char* value);
  void set_svalue(const char* value, size_t size);
  ::std::string* mutable_svalue();
  ::std::string* release_svalue();
  void set_allocated_svalue(::std::string* svalue);

  // bytes bvalue = 4;
  private:
  bool has_bvalue() const;
  public:
  void clear_bvalue();
  static const int kBvalueFieldNumber = 4;
  const ::std::string& bvalue() const;
  void set_bvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_bvalue(::std::string&& value);
  #endif
  void set_bvalue(const char* value);
  void set_bvalue(const void* value, size_t size);
  ::std::string* mutable_bvalue();
  ::std::string* release_bvalue();
  void set_allocated_bvalue(::std::string* bvalue);

  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:sm.tlv)
 private:
  void set_has_ivalue();
  void set_has_svalue();
  void set_has_bvalue();

  inline bool has_value() const;
  void clear_value();
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 tlv_type_;
  union ValueUnion {
    ValueUnion() {}
    ::google::protobuf::int32 ivalue_;
    ::google::protobuf::internal::ArenaStringPtr svalue_;
    ::google::protobuf::internal::ArenaStringPtr bvalue_;
  } value_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_shortmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class longsm : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sm.longsm) */ {
 public:
  longsm();
  virtual ~longsm();

  longsm(const longsm& from);

  inline longsm& operator=(const longsm& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const longsm& default_instance();

  static inline const longsm* internal_default_instance() {
    return reinterpret_cast<const longsm*>(
               &_longsm_default_instance_);
  }

  void Swap(longsm* other);

  // implements Message ----------------------------------------------

  inline longsm* New() const PROTOBUF_FINAL { return New(NULL); }

  longsm* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const longsm& from);
  void MergeFrom(const longsm& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(longsm* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, bytes> subcontents = 1;
  int subcontents_size() const;
  void clear_subcontents();
  static const int kSubcontentsFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      subcontents() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_subcontents();

  // @@protoc_insertion_point(class_scope:sm.longsm)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 >
      longsm_SubcontentsEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > subcontents_;
  mutable int _cached_size_;
  friend struct protobuf_shortmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class httplongsm : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sm.httplongsm) */ {
 public:
  httplongsm();
  virtual ~httplongsm();

  httplongsm(const httplongsm& from);

  inline httplongsm& operator=(const httplongsm& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const httplongsm& default_instance();

  static inline const httplongsm* internal_default_instance() {
    return reinterpret_cast<const httplongsm*>(
               &_httplongsm_default_instance_);
  }

  void Swap(httplongsm* other);

  // implements Message ----------------------------------------------

  inline httplongsm* New() const PROTOBUF_FINAL { return New(NULL); }

  httplongsm* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const httplongsm& from);
  void MergeFrom(const httplongsm& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(httplongsm* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string subids = 2;
  int subids_size() const;
  void clear_subids();
  static const int kSubidsFieldNumber = 2;
  const ::std::string& subids(int index) const;
  ::std::string* mutable_subids(int index);
  void set_subids(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_subids(int index, ::std::string&& value);
  #endif
  void set_subids(int index, const char* value);
  void set_subids(int index, const char* value, size_t size);
  ::std::string* add_subids();
  void add_subids(const ::std::string& value);
  #if LANG_CXX11
  void add_subids(::std::string&& value);
  #endif
  void add_subids(const char* value);
  void add_subids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& subids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_subids();

  // bytes longcontent = 1;
  void clear_longcontent();
  static const int kLongcontentFieldNumber = 1;
  const ::std::string& longcontent() const;
  void set_longcontent(const ::std::string& value);
  #if LANG_CXX11
  void set_longcontent(::std::string&& value);
  #endif
  void set_longcontent(const char* value);
  void set_longcontent(const void* value, size_t size);
  ::std::string* mutable_longcontent();
  ::std::string* release_longcontent();
  void set_allocated_longcontent(::std::string* longcontent);

  // @@protoc_insertion_point(class_scope:sm.httplongsm)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> subids_;
  ::google::protobuf::internal::ArenaStringPtr longcontent_;
  mutable int _cached_size_;
  friend struct protobuf_shortmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class gw_shortmsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sm.gw_shortmsg) */ {
 public:
  gw_shortmsg();
  virtual ~gw_shortmsg();

  gw_shortmsg(const gw_shortmsg& from);

  inline gw_shortmsg& operator=(const gw_shortmsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gw_shortmsg& default_instance();

  enum LsmCase {
    kSubsms = 22,
    kSupersms = 23,
    LSM_NOT_SET = 0,
  };

  static inline const gw_shortmsg* internal_default_instance() {
    return reinterpret_cast<const gw_shortmsg*>(
               &_gw_shortmsg_default_instance_);
  }

  void Swap(gw_shortmsg* other);

  // implements Message ----------------------------------------------

  inline gw_shortmsg* New() const PROTOBUF_FINAL { return New(NULL); }

  gw_shortmsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const gw_shortmsg& from);
  void MergeFrom(const gw_shortmsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(gw_shortmsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .sm.tlv tlvs = 21;
  int tlvs_size() const;
  void clear_tlvs();
  static const int kTlvsFieldNumber = 21;
  const ::sm::tlv& tlvs(int index) const;
  ::sm::tlv* mutable_tlvs(int index);
  ::sm::tlv* add_tlvs();
  ::google::protobuf::RepeatedPtrField< ::sm::tlv >*
      mutable_tlvs();
  const ::google::protobuf::RepeatedPtrField< ::sm::tlv >&
      tlvs() const;

  // string org_orgaddr = 50;
  void clear_org_orgaddr();
  static const int kOrgOrgaddrFieldNumber = 50;
  const ::std::string& org_orgaddr() const;
  void set_org_orgaddr(const ::std::string& value);
  #if LANG_CXX11
  void set_org_orgaddr(::std::string&& value);
  #endif
  void set_org_orgaddr(const char* value);
  void set_org_orgaddr(const char* value, size_t size);
  ::std::string* mutable_org_orgaddr();
  ::std::string* release_org_orgaddr();
  void set_allocated_org_orgaddr(::std::string* org_orgaddr);

  // string org_destaddr = 51;
  void clear_org_destaddr();
  static const int kOrgDestaddrFieldNumber = 51;
  const ::std::string& org_destaddr() const;
  void set_org_destaddr(const ::std::string& value);
  #if LANG_CXX11
  void set_org_destaddr(::std::string&& value);
  #endif
  void set_org_destaddr(const char* value);
  void set_org_destaddr(const char* value, size_t size);
  ::std::string* mutable_org_destaddr();
  ::std::string* release_org_destaddr();
  void set_allocated_org_destaddr(::std::string* org_destaddr);

  // string org_feeaddr = 52;
  void clear_org_feeaddr();
  static const int kOrgFeeaddrFieldNumber = 52;
  const ::std::string& org_feeaddr() const;
  void set_org_feeaddr(const ::std::string& value);
  #if LANG_CXX11
  void set_org_feeaddr(::std::string&& value);
  #endif
  void set_org_feeaddr(const char* value);
  void set_org_feeaddr(const char* value, size_t size);
  ::std::string* mutable_org_feeaddr();
  ::std::string* release_org_feeaddr();
  void set_allocated_org_feeaddr(::std::string* org_feeaddr);

  // string org_servicecode = 53;
  void clear_org_servicecode();
  static const int kOrgServicecodeFieldNumber = 53;
  const ::std::string& org_servicecode() const;
  void set_org_servicecode(const ::std::string& value);
  #if LANG_CXX11
  void set_org_servicecode(::std::string&& value);
  #endif
  void set_org_servicecode(const char* value);
  void set_org_servicecode(const char* value, size_t size);
  ::std::string* mutable_org_servicecode();
  ::std::string* release_org_servicecode();
  void set_allocated_org_servicecode(::std::string* org_servicecode);

  // string org_spcode = 54;
  void clear_org_spcode();
  static const int kOrgSpcodeFieldNumber = 54;
  const ::std::string& org_spcode() const;
  void set_org_spcode(const ::std::string& value);
  #if LANG_CXX11
  void set_org_spcode(::std::string&& value);
  #endif
  void set_org_spcode(const char* value);
  void set_org_spcode(const char* value, size_t size);
  ::std::string* mutable_org_spcode();
  ::std::string* release_org_spcode();
  void set_allocated_org_spcode(::std::string* org_spcode);

  // string dst_orgaddr = 55;
  void clear_dst_orgaddr();
  static const int kDstOrgaddrFieldNumber = 55;
  const ::std::string& dst_orgaddr() const;
  void set_dst_orgaddr(const ::std::string& value);
  #if LANG_CXX11
  void set_dst_orgaddr(::std::string&& value);
  #endif
  void set_dst_orgaddr(const char* value);
  void set_dst_orgaddr(const char* value, size_t size);
  ::std::string* mutable_dst_orgaddr();
  ::std::string* release_dst_orgaddr();
  void set_allocated_dst_orgaddr(::std::string* dst_orgaddr);

  // string dst_destaddr = 56;
  void clear_dst_destaddr();
  static const int kDstDestaddrFieldNumber = 56;
  const ::std::string& dst_destaddr() const;
  void set_dst_destaddr(const ::std::string& value);
  #if LANG_CXX11
  void set_dst_destaddr(::std::string&& value);
  #endif
  void set_dst_destaddr(const char* value);
  void set_dst_destaddr(const char* value, size_t size);
  ::std::string* mutable_dst_destaddr();
  ::std::string* release_dst_destaddr();
  void set_allocated_dst_destaddr(::std::string* dst_destaddr);

  // string dst_servicecode = 57;
  void clear_dst_servicecode();
  static const int kDstServicecodeFieldNumber = 57;
  const ::std::string& dst_servicecode() const;
  void set_dst_servicecode(const ::std::string& value);
  #if LANG_CXX11
  void set_dst_servicecode(::std::string&& value);
  #endif
  void set_dst_servicecode(const char* value);
  void set_dst_servicecode(const char* value, size_t size);
  ::std::string* mutable_dst_servicecode();
  ::std::string* release_dst_servicecode();
  void set_allocated_dst_servicecode(::std::string* dst_servicecode);

  // string dst_spcode = 58;
  void clear_dst_spcode();
  static const int kDstSpcodeFieldNumber = 58;
  const ::std::string& dst_spcode() const;
  void set_dst_spcode(const ::std::string& value);
  #if LANG_CXX11
  void set_dst_spcode(::std::string&& value);
  #endif
  void set_dst_spcode(const char* value);
  void set_dst_spcode(const char* value, size_t size);
  ::std::string* mutable_dst_spcode();
  ::std::string* release_dst_spcode();
  void set_allocated_dst_spcode(::std::string* dst_spcode);

  // string src_ip = 59;
  void clear_src_ip();
  static const int kSrcIpFieldNumber = 59;
  const ::std::string& src_ip() const;
  void set_src_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_src_ip(::std::string&& value);
  #endif
  void set_src_ip(const char* value);
  void set_src_ip(const char* value, size_t size);
  ::std::string* mutable_src_ip();
  ::std::string* release_src_ip();
  void set_allocated_src_ip(::std::string* src_ip);

  // .sm.basedata smdata = 20;
  bool has_smdata() const;
  void clear_smdata();
  static const int kSmdataFieldNumber = 20;
  const ::sm::basedata& smdata() const;
  ::sm::basedata* mutable_smdata();
  ::sm::basedata* release_smdata();
  void set_allocated_smdata(::sm::basedata* smdata);

  // int32 reply_end = 40;
  void clear_reply_end();
  static const int kReplyEndFieldNumber = 40;
  ::google::protobuf::int32 reply_end() const;
  void set_reply_end(::google::protobuf::int32 value);

  // int32 step = 41;
  void clear_step();
  static const int kStepFieldNumber = 41;
  ::google::protobuf::int32 step() const;
  void set_step(::google::protobuf::int32 value);

  // int32 snd_count = 42;
  void clear_snd_count();
  static const int kSndCountFieldNumber = 42;
  ::google::protobuf::int32 snd_count() const;
  void set_snd_count(::google::protobuf::int32 value);

  // int32 snd_flag = 43;
  void clear_snd_flag();
  static const int kSndFlagFieldNumber = 43;
  ::google::protobuf::int32 snd_flag() const;
  void set_snd_flag(::google::protobuf::int32 value);

  // int64 submit_time = 44;
  void clear_submit_time();
  static const int kSubmitTimeFieldNumber = 44;
  ::google::protobuf::int64 submit_time() const;
  void set_submit_time(::google::protobuf::int64 value);

  // int32 cmd = 45;
  void clear_cmd();
  static const int kCmdFieldNumber = 45;
  ::google::protobuf::int32 cmd() const;
  void set_cmd(::google::protobuf::int32 value);

  // int32 snd_cmd = 46;
  void clear_snd_cmd();
  static const int kSndCmdFieldNumber = 46;
  ::google::protobuf::int32 snd_cmd() const;
  void set_snd_cmd(::google::protobuf::int32 value);

  // int32 snd_seq = 47;
  void clear_snd_seq();
  static const int kSndSeqFieldNumber = 47;
  ::google::protobuf::int32 snd_seq() const;
  void set_snd_seq(::google::protobuf::int32 value);

  // int32 snd_id = 48;
  void clear_snd_id();
  static const int kSndIdFieldNumber = 48;
  ::google::protobuf::int32 snd_id() const;
  void set_snd_id(::google::protobuf::int32 value);

  // int32 rcv_id = 49;
  void clear_rcv_id();
  static const int kRcvIdFieldNumber = 49;
  ::google::protobuf::int32 rcv_id() const;
  void set_rcv_id(::google::protobuf::int32 value);

  // int32 src_codetype = 60;
  void clear_src_codetype();
  static const int kSrcCodetypeFieldNumber = 60;
  ::google::protobuf::int32 src_codetype() const;
  void set_src_codetype(::google::protobuf::int32 value);

  // .sm.longsm subsms = 22;
  bool has_subsms() const;
  void clear_subsms();
  static const int kSubsmsFieldNumber = 22;
  const ::sm::longsm& subsms() const;
  ::sm::longsm* mutable_subsms();
  ::sm::longsm* release_subsms();
  void set_allocated_subsms(::sm::longsm* subsms);

  // .sm.httplongsm supersms = 23;
  bool has_supersms() const;
  void clear_supersms();
  static const int kSupersmsFieldNumber = 23;
  const ::sm::httplongsm& supersms() const;
  ::sm::httplongsm* mutable_supersms();
  ::sm::httplongsm* release_supersms();
  void set_allocated_supersms(::sm::httplongsm* supersms);

  LsmCase lsm_case() const;
  // @@protoc_insertion_point(class_scope:sm.gw_shortmsg)
 private:
  void set_has_subsms();
  void set_has_supersms();

  inline bool has_lsm() const;
  void clear_lsm();
  inline void clear_has_lsm();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::sm::tlv > tlvs_;
  ::google::protobuf::internal::ArenaStringPtr org_orgaddr_;
  ::google::protobuf::internal::ArenaStringPtr org_destaddr_;
  ::google::protobuf::internal::ArenaStringPtr org_feeaddr_;
  ::google::protobuf::internal::ArenaStringPtr org_servicecode_;
  ::google::protobuf::internal::ArenaStringPtr org_spcode_;
  ::google::protobuf::internal::ArenaStringPtr dst_orgaddr_;
  ::google::protobuf::internal::ArenaStringPtr dst_destaddr_;
  ::google::protobuf::internal::ArenaStringPtr dst_servicecode_;
  ::google::protobuf::internal::ArenaStringPtr dst_spcode_;
  ::google::protobuf::internal::ArenaStringPtr src_ip_;
  ::sm::basedata* smdata_;
  ::google::protobuf::int32 reply_end_;
  ::google::protobuf::int32 step_;
  ::google::protobuf::int32 snd_count_;
  ::google::protobuf::int32 snd_flag_;
  ::google::protobuf::int64 submit_time_;
  ::google::protobuf::int32 cmd_;
  ::google::protobuf::int32 snd_cmd_;
  ::google::protobuf::int32 snd_seq_;
  ::google::protobuf::int32 snd_id_;
  ::google::protobuf::int32 rcv_id_;
  ::google::protobuf::int32 src_codetype_;
  union LsmUnion {
    LsmUnion() {}
    ::sm::longsm* subsms_;
    ::sm::httplongsm* supersms_;
  } lsm_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_shortmsg_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// basedata

// string sndaddr = 1;
inline void basedata::clear_sndaddr() {
  sndaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& basedata::sndaddr() const {
  // @@protoc_insertion_point(field_get:sm.basedata.sndaddr)
  return sndaddr_.GetNoArena();
}
inline void basedata::set_sndaddr(const ::std::string& value) {
  
  sndaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sm.basedata.sndaddr)
}
#if LANG_CXX11
inline void basedata::set_sndaddr(::std::string&& value) {
  
  sndaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sm.basedata.sndaddr)
}
#endif
inline void basedata::set_sndaddr(const char* value) {
  
  sndaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sm.basedata.sndaddr)
}
inline void basedata::set_sndaddr(const char* value, size_t size) {
  
  sndaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sm.basedata.sndaddr)
}
inline ::std::string* basedata::mutable_sndaddr() {
  
  // @@protoc_insertion_point(field_mutable:sm.basedata.sndaddr)
  return sndaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* basedata::release_sndaddr() {
  // @@protoc_insertion_point(field_release:sm.basedata.sndaddr)
  
  return sndaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void basedata::set_allocated_sndaddr(::std::string* sndaddr) {
  if (sndaddr != NULL) {
    
  } else {
    
  }
  sndaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sndaddr);
  // @@protoc_insertion_point(field_set_allocated:sm.basedata.sndaddr)
}

// int32 sndton = 2;
inline void basedata::clear_sndton() {
  sndton_ = 0;
}
inline ::google::protobuf::int32 basedata::sndton() const {
  // @@protoc_insertion_point(field_get:sm.basedata.sndton)
  return sndton_;
}
inline void basedata::set_sndton(::google::protobuf::int32 value) {
  
  sndton_ = value;
  // @@protoc_insertion_point(field_set:sm.basedata.sndton)
}

// int32 sndnpi = 3;
inline void basedata::clear_sndnpi() {
  sndnpi_ = 0;
}
inline ::google::protobuf::int32 basedata::sndnpi() const {
  // @@protoc_insertion_point(field_get:sm.basedata.sndnpi)
  return sndnpi_;
}
inline void basedata::set_sndnpi(::google::protobuf::int32 value) {
  
  sndnpi_ = value;
  // @@protoc_insertion_point(field_set:sm.basedata.sndnpi)
}

// string rcvaddr = 4;
inline void basedata::clear_rcvaddr() {
  rcvaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& basedata::rcvaddr() const {
  // @@protoc_insertion_point(field_get:sm.basedata.rcvaddr)
  return rcvaddr_.GetNoArena();
}
inline void basedata::set_rcvaddr(const ::std::string& value) {
  
  rcvaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sm.basedata.rcvaddr)
}
#if LANG_CXX11
inline void basedata::set_rcvaddr(::std::string&& value) {
  
  rcvaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sm.basedata.rcvaddr)
}
#endif
inline void basedata::set_rcvaddr(const char* value) {
  
  rcvaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sm.basedata.rcvaddr)
}
inline void basedata::set_rcvaddr(const char* value, size_t size) {
  
  rcvaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sm.basedata.rcvaddr)
}
inline ::std::string* basedata::mutable_rcvaddr() {
  
  // @@protoc_insertion_point(field_mutable:sm.basedata.rcvaddr)
  return rcvaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* basedata::release_rcvaddr() {
  // @@protoc_insertion_point(field_release:sm.basedata.rcvaddr)
  
  return rcvaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void basedata::set_allocated_rcvaddr(::std::string* rcvaddr) {
  if (rcvaddr != NULL) {
    
  } else {
    
  }
  rcvaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rcvaddr);
  // @@protoc_insertion_point(field_set_allocated:sm.basedata.rcvaddr)
}

// int32 rcvton = 5;
inline void basedata::clear_rcvton() {
  rcvton_ = 0;
}
inline ::google::protobuf::int32 basedata::rcvton() const {
  // @@protoc_insertion_point(field_get:sm.basedata.rcvton)
  return rcvton_;
}
inline void basedata::set_rcvton(::google::protobuf::int32 value) {
  
  rcvton_ = value;
  // @@protoc_insertion_point(field_set:sm.basedata.rcvton)
}

// int32 rcvnpi = 6;
inline void basedata::clear_rcvnpi() {
  rcvnpi_ = 0;
}
inline ::google::protobuf::int32 basedata::rcvnpi() const {
  // @@protoc_insertion_point(field_get:sm.basedata.rcvnpi)
  return rcvnpi_;
}
inline void basedata::set_rcvnpi(::google::protobuf::int32 value) {
  
  rcvnpi_ = value;
  // @@protoc_insertion_point(field_set:sm.basedata.rcvnpi)
}

// int32 ems_class = 7;
inline void basedata::clear_ems_class() {
  ems_class_ = 0;
}
inline ::google::protobuf::int32 basedata::ems_class() const {
  // @@protoc_insertion_point(field_get:sm.basedata.ems_class)
  return ems_class_;
}
inline void basedata::set_ems_class(::google::protobuf::int32 value) {
  
  ems_class_ = value;
  // @@protoc_insertion_point(field_set:sm.basedata.ems_class)
}

// int32 pri = 8;
inline void basedata::clear_pri() {
  pri_ = 0;
}
inline ::google::protobuf::int32 basedata::pri() const {
  // @@protoc_insertion_point(field_get:sm.basedata.pri)
  return pri_;
}
inline void basedata::set_pri(::google::protobuf::int32 value) {
  
  pri_ = value;
  // @@protoc_insertion_point(field_set:sm.basedata.pri)
}

// int32 pid = 9;
inline void basedata::clear_pid() {
  pid_ = 0;
}
inline ::google::protobuf::int32 basedata::pid() const {
  // @@protoc_insertion_point(field_get:sm.basedata.pid)
  return pid_;
}
inline void basedata::set_pid(::google::protobuf::int32 value) {
  
  pid_ = value;
  // @@protoc_insertion_point(field_set:sm.basedata.pid)
}

// string scheduletime = 10;
inline void basedata::clear_scheduletime() {
  scheduletime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& basedata::scheduletime() const {
  // @@protoc_insertion_point(field_get:sm.basedata.scheduletime)
  return scheduletime_.GetNoArena();
}
inline void basedata::set_scheduletime(const ::std::string& value) {
  
  scheduletime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sm.basedata.scheduletime)
}
#if LANG_CXX11
inline void basedata::set_scheduletime(::std::string&& value) {
  
  scheduletime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sm.basedata.scheduletime)
}
#endif
inline void basedata::set_scheduletime(const char* value) {
  
  scheduletime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sm.basedata.scheduletime)
}
inline void basedata::set_scheduletime(const char* value, size_t size) {
  
  scheduletime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sm.basedata.scheduletime)
}
inline ::std::string* basedata::mutable_scheduletime() {
  
  // @@protoc_insertion_point(field_mutable:sm.basedata.scheduletime)
  return scheduletime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* basedata::release_scheduletime() {
  // @@protoc_insertion_point(field_release:sm.basedata.scheduletime)
  
  return scheduletime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void basedata::set_allocated_scheduletime(::std::string* scheduletime) {
  if (scheduletime != NULL) {
    
  } else {
    
  }
  scheduletime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scheduletime);
  // @@protoc_insertion_point(field_set_allocated:sm.basedata.scheduletime)
}

// string expiretime = 11;
inline void basedata::clear_expiretime() {
  expiretime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& basedata::expiretime() const {
  // @@protoc_insertion_point(field_get:sm.basedata.expiretime)
  return expiretime_.GetNoArena();
}
inline void basedata::set_expiretime(const ::std::string& value) {
  
  expiretime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sm.basedata.expiretime)
}
#if LANG_CXX11
inline void basedata::set_expiretime(::std::string&& value) {
  
  expiretime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sm.basedata.expiretime)
}
#endif
inline void basedata::set_expiretime(const char* value) {
  
  expiretime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sm.basedata.expiretime)
}
inline void basedata::set_expiretime(const char* value, size_t size) {
  
  expiretime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sm.basedata.expiretime)
}
inline ::std::string* basedata::mutable_expiretime() {
  
  // @@protoc_insertion_point(field_mutable:sm.basedata.expiretime)
  return expiretime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* basedata::release_expiretime() {
  // @@protoc_insertion_point(field_release:sm.basedata.expiretime)
  
  return expiretime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void basedata::set_allocated_expiretime(::std::string* expiretime) {
  if (expiretime != NULL) {
    
  } else {
    
  }
  expiretime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), expiretime);
  // @@protoc_insertion_point(field_set_allocated:sm.basedata.expiretime)
}

// int32 reporttype = 12;
inline void basedata::clear_reporttype() {
  reporttype_ = 0;
}
inline ::google::protobuf::int32 basedata::reporttype() const {
  // @@protoc_insertion_point(field_get:sm.basedata.reporttype)
  return reporttype_;
}
inline void basedata::set_reporttype(::google::protobuf::int32 value) {
  
  reporttype_ = value;
  // @@protoc_insertion_point(field_set:sm.basedata.reporttype)
}

// int32 dcs = 13;
inline void basedata::clear_dcs() {
  dcs_ = 0;
}
inline ::google::protobuf::int32 basedata::dcs() const {
  // @@protoc_insertion_point(field_get:sm.basedata.dcs)
  return dcs_;
}
inline void basedata::set_dcs(::google::protobuf::int32 value) {
  
  dcs_ = value;
  // @@protoc_insertion_point(field_set:sm.basedata.dcs)
}

// bytes content = 14;
inline void basedata::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& basedata::content() const {
  // @@protoc_insertion_point(field_get:sm.basedata.content)
  return content_.GetNoArena();
}
inline void basedata::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sm.basedata.content)
}
#if LANG_CXX11
inline void basedata::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sm.basedata.content)
}
#endif
inline void basedata::set_content(const char* value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sm.basedata.content)
}
inline void basedata::set_content(const void* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sm.basedata.content)
}
inline ::std::string* basedata::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:sm.basedata.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* basedata::release_content() {
  // @@protoc_insertion_point(field_release:sm.basedata.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void basedata::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:sm.basedata.content)
}

// -------------------------------------------------------------------

// tlv

// int32 tlv_type = 1;
inline void tlv::clear_tlv_type() {
  tlv_type_ = 0;
}
inline ::google::protobuf::int32 tlv::tlv_type() const {
  // @@protoc_insertion_point(field_get:sm.tlv.tlv_type)
  return tlv_type_;
}
inline void tlv::set_tlv_type(::google::protobuf::int32 value) {
  
  tlv_type_ = value;
  // @@protoc_insertion_point(field_set:sm.tlv.tlv_type)
}

// int32 ivalue = 2;
inline bool tlv::has_ivalue() const {
  return value_case() == kIvalue;
}
inline void tlv::set_has_ivalue() {
  _oneof_case_[0] = kIvalue;
}
inline void tlv::clear_ivalue() {
  if (has_ivalue()) {
    value_.ivalue_ = 0;
    clear_has_value();
  }
}
inline ::google::protobuf::int32 tlv::ivalue() const {
  // @@protoc_insertion_point(field_get:sm.tlv.ivalue)
  if (has_ivalue()) {
    return value_.ivalue_;
  }
  return 0;
}
inline void tlv::set_ivalue(::google::protobuf::int32 value) {
  if (!has_ivalue()) {
    clear_value();
    set_has_ivalue();
  }
  value_.ivalue_ = value;
  // @@protoc_insertion_point(field_set:sm.tlv.ivalue)
}

// string svalue = 3;
inline bool tlv::has_svalue() const {
  return value_case() == kSvalue;
}
inline void tlv::set_has_svalue() {
  _oneof_case_[0] = kSvalue;
}
inline void tlv::clear_svalue() {
  if (has_svalue()) {
    value_.svalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
inline const ::std::string& tlv::svalue() const {
  // @@protoc_insertion_point(field_get:sm.tlv.svalue)
  if (has_svalue()) {
    return value_.svalue_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void tlv::set_svalue(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:sm.tlv.svalue)
  if (!has_svalue()) {
    clear_value();
    set_has_svalue();
    value_.svalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.svalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sm.tlv.svalue)
}
#if LANG_CXX11
inline void tlv::set_svalue(::std::string&& value) {
  // @@protoc_insertion_point(field_set:sm.tlv.svalue)
  if (!has_svalue()) {
    clear_value();
    set_has_svalue();
    value_.svalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.svalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sm.tlv.svalue)
}
#endif
inline void tlv::set_svalue(const char* value) {
  if (!has_svalue()) {
    clear_value();
    set_has_svalue();
    value_.svalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.svalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sm.tlv.svalue)
}
inline void tlv::set_svalue(const char* value, size_t size) {
  if (!has_svalue()) {
    clear_value();
    set_has_svalue();
    value_.svalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.svalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sm.tlv.svalue)
}
inline ::std::string* tlv::mutable_svalue() {
  if (!has_svalue()) {
    clear_value();
    set_has_svalue();
    value_.svalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:sm.tlv.svalue)
  return value_.svalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* tlv::release_svalue() {
  // @@protoc_insertion_point(field_release:sm.tlv.svalue)
  if (has_svalue()) {
    clear_has_value();
    return value_.svalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void tlv::set_allocated_svalue(::std::string* svalue) {
  if (!has_svalue()) {
    value_.svalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (svalue != NULL) {
    set_has_svalue();
    value_.svalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        svalue);
  }
  // @@protoc_insertion_point(field_set_allocated:sm.tlv.svalue)
}

// bytes bvalue = 4;
inline bool tlv::has_bvalue() const {
  return value_case() == kBvalue;
}
inline void tlv::set_has_bvalue() {
  _oneof_case_[0] = kBvalue;
}
inline void tlv::clear_bvalue() {
  if (has_bvalue()) {
    value_.bvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
inline const ::std::string& tlv::bvalue() const {
  // @@protoc_insertion_point(field_get:sm.tlv.bvalue)
  if (has_bvalue()) {
    return value_.bvalue_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void tlv::set_bvalue(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:sm.tlv.bvalue)
  if (!has_bvalue()) {
    clear_value();
    set_has_bvalue();
    value_.bvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.bvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sm.tlv.bvalue)
}
#if LANG_CXX11
inline void tlv::set_bvalue(::std::string&& value) {
  // @@protoc_insertion_point(field_set:sm.tlv.bvalue)
  if (!has_bvalue()) {
    clear_value();
    set_has_bvalue();
    value_.bvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.bvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sm.tlv.bvalue)
}
#endif
inline void tlv::set_bvalue(const char* value) {
  if (!has_bvalue()) {
    clear_value();
    set_has_bvalue();
    value_.bvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.bvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sm.tlv.bvalue)
}
inline void tlv::set_bvalue(const void* value, size_t size) {
  if (!has_bvalue()) {
    clear_value();
    set_has_bvalue();
    value_.bvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.bvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sm.tlv.bvalue)
}
inline ::std::string* tlv::mutable_bvalue() {
  if (!has_bvalue()) {
    clear_value();
    set_has_bvalue();
    value_.bvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:sm.tlv.bvalue)
  return value_.bvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* tlv::release_bvalue() {
  // @@protoc_insertion_point(field_release:sm.tlv.bvalue)
  if (has_bvalue()) {
    clear_has_value();
    return value_.bvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void tlv::set_allocated_bvalue(::std::string* bvalue) {
  if (!has_bvalue()) {
    value_.bvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (bvalue != NULL) {
    set_has_bvalue();
    value_.bvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        bvalue);
  }
  // @@protoc_insertion_point(field_set_allocated:sm.tlv.bvalue)
}

inline bool tlv::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void tlv::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline tlv::ValueCase tlv::value_case() const {
  return tlv::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// longsm

// map<string, bytes> subcontents = 1;
inline int longsm::subcontents_size() const {
  return subcontents_.size();
}
inline void longsm::clear_subcontents() {
  subcontents_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
longsm::subcontents() const {
  // @@protoc_insertion_point(field_map:sm.longsm.subcontents)
  return subcontents_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
longsm::mutable_subcontents() {
  // @@protoc_insertion_point(field_mutable_map:sm.longsm.subcontents)
  return subcontents_.MutableMap();
}

// -------------------------------------------------------------------

// httplongsm

// bytes longcontent = 1;
inline void httplongsm::clear_longcontent() {
  longcontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& httplongsm::longcontent() const {
  // @@protoc_insertion_point(field_get:sm.httplongsm.longcontent)
  return longcontent_.GetNoArena();
}
inline void httplongsm::set_longcontent(const ::std::string& value) {
  
  longcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sm.httplongsm.longcontent)
}
#if LANG_CXX11
inline void httplongsm::set_longcontent(::std::string&& value) {
  
  longcontent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sm.httplongsm.longcontent)
}
#endif
inline void httplongsm::set_longcontent(const char* value) {
  
  longcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sm.httplongsm.longcontent)
}
inline void httplongsm::set_longcontent(const void* value, size_t size) {
  
  longcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sm.httplongsm.longcontent)
}
inline ::std::string* httplongsm::mutable_longcontent() {
  
  // @@protoc_insertion_point(field_mutable:sm.httplongsm.longcontent)
  return longcontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* httplongsm::release_longcontent() {
  // @@protoc_insertion_point(field_release:sm.httplongsm.longcontent)
  
  return longcontent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void httplongsm::set_allocated_longcontent(::std::string* longcontent) {
  if (longcontent != NULL) {
    
  } else {
    
  }
  longcontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), longcontent);
  // @@protoc_insertion_point(field_set_allocated:sm.httplongsm.longcontent)
}

// repeated string subids = 2;
inline int httplongsm::subids_size() const {
  return subids_.size();
}
inline void httplongsm::clear_subids() {
  subids_.Clear();
}
inline const ::std::string& httplongsm::subids(int index) const {
  // @@protoc_insertion_point(field_get:sm.httplongsm.subids)
  return subids_.Get(index);
}
inline ::std::string* httplongsm::mutable_subids(int index) {
  // @@protoc_insertion_point(field_mutable:sm.httplongsm.subids)
  return subids_.Mutable(index);
}
inline void httplongsm::set_subids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:sm.httplongsm.subids)
  subids_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void httplongsm::set_subids(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:sm.httplongsm.subids)
  subids_.Mutable(index)->assign(std::move(value));
}
#endif
inline void httplongsm::set_subids(int index, const char* value) {
  subids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:sm.httplongsm.subids)
}
inline void httplongsm::set_subids(int index, const char* value, size_t size) {
  subids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:sm.httplongsm.subids)
}
inline ::std::string* httplongsm::add_subids() {
  // @@protoc_insertion_point(field_add_mutable:sm.httplongsm.subids)
  return subids_.Add();
}
inline void httplongsm::add_subids(const ::std::string& value) {
  subids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:sm.httplongsm.subids)
}
#if LANG_CXX11
inline void httplongsm::add_subids(::std::string&& value) {
  subids_.Add()->assign(std::move(value));
  // @@protoc_insertion_point(field_add:sm.httplongsm.subids)
}
#endif
inline void httplongsm::add_subids(const char* value) {
  subids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:sm.httplongsm.subids)
}
inline void httplongsm::add_subids(const char* value, size_t size) {
  subids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:sm.httplongsm.subids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
httplongsm::subids() const {
  // @@protoc_insertion_point(field_list:sm.httplongsm.subids)
  return subids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
httplongsm::mutable_subids() {
  // @@protoc_insertion_point(field_mutable_list:sm.httplongsm.subids)
  return &subids_;
}

// -------------------------------------------------------------------

// gw_shortmsg

// .sm.basedata smdata = 20;
inline bool gw_shortmsg::has_smdata() const {
  return this != internal_default_instance() && smdata_ != NULL;
}
inline void gw_shortmsg::clear_smdata() {
  if (GetArenaNoVirtual() == NULL && smdata_ != NULL) delete smdata_;
  smdata_ = NULL;
}
inline const ::sm::basedata& gw_shortmsg::smdata() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.smdata)
  return smdata_ != NULL ? *smdata_
                         : *::sm::basedata::internal_default_instance();
}
inline ::sm::basedata* gw_shortmsg::mutable_smdata() {
  
  if (smdata_ == NULL) {
    smdata_ = new ::sm::basedata;
  }
  // @@protoc_insertion_point(field_mutable:sm.gw_shortmsg.smdata)
  return smdata_;
}
inline ::sm::basedata* gw_shortmsg::release_smdata() {
  // @@protoc_insertion_point(field_release:sm.gw_shortmsg.smdata)
  
  ::sm::basedata* temp = smdata_;
  smdata_ = NULL;
  return temp;
}
inline void gw_shortmsg::set_allocated_smdata(::sm::basedata* smdata) {
  delete smdata_;
  smdata_ = smdata;
  if (smdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sm.gw_shortmsg.smdata)
}

// repeated .sm.tlv tlvs = 21;
inline int gw_shortmsg::tlvs_size() const {
  return tlvs_.size();
}
inline void gw_shortmsg::clear_tlvs() {
  tlvs_.Clear();
}
inline const ::sm::tlv& gw_shortmsg::tlvs(int index) const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.tlvs)
  return tlvs_.Get(index);
}
inline ::sm::tlv* gw_shortmsg::mutable_tlvs(int index) {
  // @@protoc_insertion_point(field_mutable:sm.gw_shortmsg.tlvs)
  return tlvs_.Mutable(index);
}
inline ::sm::tlv* gw_shortmsg::add_tlvs() {
  // @@protoc_insertion_point(field_add:sm.gw_shortmsg.tlvs)
  return tlvs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::sm::tlv >*
gw_shortmsg::mutable_tlvs() {
  // @@protoc_insertion_point(field_mutable_list:sm.gw_shortmsg.tlvs)
  return &tlvs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::sm::tlv >&
gw_shortmsg::tlvs() const {
  // @@protoc_insertion_point(field_list:sm.gw_shortmsg.tlvs)
  return tlvs_;
}

// .sm.longsm subsms = 22;
inline bool gw_shortmsg::has_subsms() const {
  return lsm_case() == kSubsms;
}
inline void gw_shortmsg::set_has_subsms() {
  _oneof_case_[0] = kSubsms;
}
inline void gw_shortmsg::clear_subsms() {
  if (has_subsms()) {
    delete lsm_.subsms_;
    clear_has_lsm();
  }
}
inline  const ::sm::longsm& gw_shortmsg::subsms() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.subsms)
  return has_subsms()
      ? *lsm_.subsms_
      : ::sm::longsm::default_instance();
}
inline ::sm::longsm* gw_shortmsg::mutable_subsms() {
  if (!has_subsms()) {
    clear_lsm();
    set_has_subsms();
    lsm_.subsms_ = new ::sm::longsm;
  }
  // @@protoc_insertion_point(field_mutable:sm.gw_shortmsg.subsms)
  return lsm_.subsms_;
}
inline ::sm::longsm* gw_shortmsg::release_subsms() {
  // @@protoc_insertion_point(field_release:sm.gw_shortmsg.subsms)
  if (has_subsms()) {
    clear_has_lsm();
    ::sm::longsm* temp = lsm_.subsms_;
    lsm_.subsms_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void gw_shortmsg::set_allocated_subsms(::sm::longsm* subsms) {
  clear_lsm();
  if (subsms) {
    set_has_subsms();
    lsm_.subsms_ = subsms;
  }
  // @@protoc_insertion_point(field_set_allocated:sm.gw_shortmsg.subsms)
}

// .sm.httplongsm supersms = 23;
inline bool gw_shortmsg::has_supersms() const {
  return lsm_case() == kSupersms;
}
inline void gw_shortmsg::set_has_supersms() {
  _oneof_case_[0] = kSupersms;
}
inline void gw_shortmsg::clear_supersms() {
  if (has_supersms()) {
    delete lsm_.supersms_;
    clear_has_lsm();
  }
}
inline  const ::sm::httplongsm& gw_shortmsg::supersms() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.supersms)
  return has_supersms()
      ? *lsm_.supersms_
      : ::sm::httplongsm::default_instance();
}
inline ::sm::httplongsm* gw_shortmsg::mutable_supersms() {
  if (!has_supersms()) {
    clear_lsm();
    set_has_supersms();
    lsm_.supersms_ = new ::sm::httplongsm;
  }
  // @@protoc_insertion_point(field_mutable:sm.gw_shortmsg.supersms)
  return lsm_.supersms_;
}
inline ::sm::httplongsm* gw_shortmsg::release_supersms() {
  // @@protoc_insertion_point(field_release:sm.gw_shortmsg.supersms)
  if (has_supersms()) {
    clear_has_lsm();
    ::sm::httplongsm* temp = lsm_.supersms_;
    lsm_.supersms_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void gw_shortmsg::set_allocated_supersms(::sm::httplongsm* supersms) {
  clear_lsm();
  if (supersms) {
    set_has_supersms();
    lsm_.supersms_ = supersms;
  }
  // @@protoc_insertion_point(field_set_allocated:sm.gw_shortmsg.supersms)
}

// int32 reply_end = 40;
inline void gw_shortmsg::clear_reply_end() {
  reply_end_ = 0;
}
inline ::google::protobuf::int32 gw_shortmsg::reply_end() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.reply_end)
  return reply_end_;
}
inline void gw_shortmsg::set_reply_end(::google::protobuf::int32 value) {
  
  reply_end_ = value;
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.reply_end)
}

// int32 step = 41;
inline void gw_shortmsg::clear_step() {
  step_ = 0;
}
inline ::google::protobuf::int32 gw_shortmsg::step() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.step)
  return step_;
}
inline void gw_shortmsg::set_step(::google::protobuf::int32 value) {
  
  step_ = value;
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.step)
}

// int32 snd_count = 42;
inline void gw_shortmsg::clear_snd_count() {
  snd_count_ = 0;
}
inline ::google::protobuf::int32 gw_shortmsg::snd_count() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.snd_count)
  return snd_count_;
}
inline void gw_shortmsg::set_snd_count(::google::protobuf::int32 value) {
  
  snd_count_ = value;
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.snd_count)
}

// int32 snd_flag = 43;
inline void gw_shortmsg::clear_snd_flag() {
  snd_flag_ = 0;
}
inline ::google::protobuf::int32 gw_shortmsg::snd_flag() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.snd_flag)
  return snd_flag_;
}
inline void gw_shortmsg::set_snd_flag(::google::protobuf::int32 value) {
  
  snd_flag_ = value;
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.snd_flag)
}

// int64 submit_time = 44;
inline void gw_shortmsg::clear_submit_time() {
  submit_time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 gw_shortmsg::submit_time() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.submit_time)
  return submit_time_;
}
inline void gw_shortmsg::set_submit_time(::google::protobuf::int64 value) {
  
  submit_time_ = value;
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.submit_time)
}

// int32 cmd = 45;
inline void gw_shortmsg::clear_cmd() {
  cmd_ = 0;
}
inline ::google::protobuf::int32 gw_shortmsg::cmd() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.cmd)
  return cmd_;
}
inline void gw_shortmsg::set_cmd(::google::protobuf::int32 value) {
  
  cmd_ = value;
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.cmd)
}

// int32 snd_cmd = 46;
inline void gw_shortmsg::clear_snd_cmd() {
  snd_cmd_ = 0;
}
inline ::google::protobuf::int32 gw_shortmsg::snd_cmd() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.snd_cmd)
  return snd_cmd_;
}
inline void gw_shortmsg::set_snd_cmd(::google::protobuf::int32 value) {
  
  snd_cmd_ = value;
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.snd_cmd)
}

// int32 snd_seq = 47;
inline void gw_shortmsg::clear_snd_seq() {
  snd_seq_ = 0;
}
inline ::google::protobuf::int32 gw_shortmsg::snd_seq() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.snd_seq)
  return snd_seq_;
}
inline void gw_shortmsg::set_snd_seq(::google::protobuf::int32 value) {
  
  snd_seq_ = value;
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.snd_seq)
}

// int32 snd_id = 48;
inline void gw_shortmsg::clear_snd_id() {
  snd_id_ = 0;
}
inline ::google::protobuf::int32 gw_shortmsg::snd_id() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.snd_id)
  return snd_id_;
}
inline void gw_shortmsg::set_snd_id(::google::protobuf::int32 value) {
  
  snd_id_ = value;
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.snd_id)
}

// int32 rcv_id = 49;
inline void gw_shortmsg::clear_rcv_id() {
  rcv_id_ = 0;
}
inline ::google::protobuf::int32 gw_shortmsg::rcv_id() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.rcv_id)
  return rcv_id_;
}
inline void gw_shortmsg::set_rcv_id(::google::protobuf::int32 value) {
  
  rcv_id_ = value;
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.rcv_id)
}

// string org_orgaddr = 50;
inline void gw_shortmsg::clear_org_orgaddr() {
  org_orgaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& gw_shortmsg::org_orgaddr() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.org_orgaddr)
  return org_orgaddr_.GetNoArena();
}
inline void gw_shortmsg::set_org_orgaddr(const ::std::string& value) {
  
  org_orgaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.org_orgaddr)
}
#if LANG_CXX11
inline void gw_shortmsg::set_org_orgaddr(::std::string&& value) {
  
  org_orgaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sm.gw_shortmsg.org_orgaddr)
}
#endif
inline void gw_shortmsg::set_org_orgaddr(const char* value) {
  
  org_orgaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sm.gw_shortmsg.org_orgaddr)
}
inline void gw_shortmsg::set_org_orgaddr(const char* value, size_t size) {
  
  org_orgaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sm.gw_shortmsg.org_orgaddr)
}
inline ::std::string* gw_shortmsg::mutable_org_orgaddr() {
  
  // @@protoc_insertion_point(field_mutable:sm.gw_shortmsg.org_orgaddr)
  return org_orgaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* gw_shortmsg::release_org_orgaddr() {
  // @@protoc_insertion_point(field_release:sm.gw_shortmsg.org_orgaddr)
  
  return org_orgaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void gw_shortmsg::set_allocated_org_orgaddr(::std::string* org_orgaddr) {
  if (org_orgaddr != NULL) {
    
  } else {
    
  }
  org_orgaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), org_orgaddr);
  // @@protoc_insertion_point(field_set_allocated:sm.gw_shortmsg.org_orgaddr)
}

// string org_destaddr = 51;
inline void gw_shortmsg::clear_org_destaddr() {
  org_destaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& gw_shortmsg::org_destaddr() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.org_destaddr)
  return org_destaddr_.GetNoArena();
}
inline void gw_shortmsg::set_org_destaddr(const ::std::string& value) {
  
  org_destaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.org_destaddr)
}
#if LANG_CXX11
inline void gw_shortmsg::set_org_destaddr(::std::string&& value) {
  
  org_destaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sm.gw_shortmsg.org_destaddr)
}
#endif
inline void gw_shortmsg::set_org_destaddr(const char* value) {
  
  org_destaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sm.gw_shortmsg.org_destaddr)
}
inline void gw_shortmsg::set_org_destaddr(const char* value, size_t size) {
  
  org_destaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sm.gw_shortmsg.org_destaddr)
}
inline ::std::string* gw_shortmsg::mutable_org_destaddr() {
  
  // @@protoc_insertion_point(field_mutable:sm.gw_shortmsg.org_destaddr)
  return org_destaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* gw_shortmsg::release_org_destaddr() {
  // @@protoc_insertion_point(field_release:sm.gw_shortmsg.org_destaddr)
  
  return org_destaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void gw_shortmsg::set_allocated_org_destaddr(::std::string* org_destaddr) {
  if (org_destaddr != NULL) {
    
  } else {
    
  }
  org_destaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), org_destaddr);
  // @@protoc_insertion_point(field_set_allocated:sm.gw_shortmsg.org_destaddr)
}

// string org_feeaddr = 52;
inline void gw_shortmsg::clear_org_feeaddr() {
  org_feeaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& gw_shortmsg::org_feeaddr() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.org_feeaddr)
  return org_feeaddr_.GetNoArena();
}
inline void gw_shortmsg::set_org_feeaddr(const ::std::string& value) {
  
  org_feeaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.org_feeaddr)
}
#if LANG_CXX11
inline void gw_shortmsg::set_org_feeaddr(::std::string&& value) {
  
  org_feeaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sm.gw_shortmsg.org_feeaddr)
}
#endif
inline void gw_shortmsg::set_org_feeaddr(const char* value) {
  
  org_feeaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sm.gw_shortmsg.org_feeaddr)
}
inline void gw_shortmsg::set_org_feeaddr(const char* value, size_t size) {
  
  org_feeaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sm.gw_shortmsg.org_feeaddr)
}
inline ::std::string* gw_shortmsg::mutable_org_feeaddr() {
  
  // @@protoc_insertion_point(field_mutable:sm.gw_shortmsg.org_feeaddr)
  return org_feeaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* gw_shortmsg::release_org_feeaddr() {
  // @@protoc_insertion_point(field_release:sm.gw_shortmsg.org_feeaddr)
  
  return org_feeaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void gw_shortmsg::set_allocated_org_feeaddr(::std::string* org_feeaddr) {
  if (org_feeaddr != NULL) {
    
  } else {
    
  }
  org_feeaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), org_feeaddr);
  // @@protoc_insertion_point(field_set_allocated:sm.gw_shortmsg.org_feeaddr)
}

// string org_servicecode = 53;
inline void gw_shortmsg::clear_org_servicecode() {
  org_servicecode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& gw_shortmsg::org_servicecode() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.org_servicecode)
  return org_servicecode_.GetNoArena();
}
inline void gw_shortmsg::set_org_servicecode(const ::std::string& value) {
  
  org_servicecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.org_servicecode)
}
#if LANG_CXX11
inline void gw_shortmsg::set_org_servicecode(::std::string&& value) {
  
  org_servicecode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sm.gw_shortmsg.org_servicecode)
}
#endif
inline void gw_shortmsg::set_org_servicecode(const char* value) {
  
  org_servicecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sm.gw_shortmsg.org_servicecode)
}
inline void gw_shortmsg::set_org_servicecode(const char* value, size_t size) {
  
  org_servicecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sm.gw_shortmsg.org_servicecode)
}
inline ::std::string* gw_shortmsg::mutable_org_servicecode() {
  
  // @@protoc_insertion_point(field_mutable:sm.gw_shortmsg.org_servicecode)
  return org_servicecode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* gw_shortmsg::release_org_servicecode() {
  // @@protoc_insertion_point(field_release:sm.gw_shortmsg.org_servicecode)
  
  return org_servicecode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void gw_shortmsg::set_allocated_org_servicecode(::std::string* org_servicecode) {
  if (org_servicecode != NULL) {
    
  } else {
    
  }
  org_servicecode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), org_servicecode);
  // @@protoc_insertion_point(field_set_allocated:sm.gw_shortmsg.org_servicecode)
}

// string org_spcode = 54;
inline void gw_shortmsg::clear_org_spcode() {
  org_spcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& gw_shortmsg::org_spcode() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.org_spcode)
  return org_spcode_.GetNoArena();
}
inline void gw_shortmsg::set_org_spcode(const ::std::string& value) {
  
  org_spcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.org_spcode)
}
#if LANG_CXX11
inline void gw_shortmsg::set_org_spcode(::std::string&& value) {
  
  org_spcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sm.gw_shortmsg.org_spcode)
}
#endif
inline void gw_shortmsg::set_org_spcode(const char* value) {
  
  org_spcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sm.gw_shortmsg.org_spcode)
}
inline void gw_shortmsg::set_org_spcode(const char* value, size_t size) {
  
  org_spcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sm.gw_shortmsg.org_spcode)
}
inline ::std::string* gw_shortmsg::mutable_org_spcode() {
  
  // @@protoc_insertion_point(field_mutable:sm.gw_shortmsg.org_spcode)
  return org_spcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* gw_shortmsg::release_org_spcode() {
  // @@protoc_insertion_point(field_release:sm.gw_shortmsg.org_spcode)
  
  return org_spcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void gw_shortmsg::set_allocated_org_spcode(::std::string* org_spcode) {
  if (org_spcode != NULL) {
    
  } else {
    
  }
  org_spcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), org_spcode);
  // @@protoc_insertion_point(field_set_allocated:sm.gw_shortmsg.org_spcode)
}

// string dst_orgaddr = 55;
inline void gw_shortmsg::clear_dst_orgaddr() {
  dst_orgaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& gw_shortmsg::dst_orgaddr() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.dst_orgaddr)
  return dst_orgaddr_.GetNoArena();
}
inline void gw_shortmsg::set_dst_orgaddr(const ::std::string& value) {
  
  dst_orgaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.dst_orgaddr)
}
#if LANG_CXX11
inline void gw_shortmsg::set_dst_orgaddr(::std::string&& value) {
  
  dst_orgaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sm.gw_shortmsg.dst_orgaddr)
}
#endif
inline void gw_shortmsg::set_dst_orgaddr(const char* value) {
  
  dst_orgaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sm.gw_shortmsg.dst_orgaddr)
}
inline void gw_shortmsg::set_dst_orgaddr(const char* value, size_t size) {
  
  dst_orgaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sm.gw_shortmsg.dst_orgaddr)
}
inline ::std::string* gw_shortmsg::mutable_dst_orgaddr() {
  
  // @@protoc_insertion_point(field_mutable:sm.gw_shortmsg.dst_orgaddr)
  return dst_orgaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* gw_shortmsg::release_dst_orgaddr() {
  // @@protoc_insertion_point(field_release:sm.gw_shortmsg.dst_orgaddr)
  
  return dst_orgaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void gw_shortmsg::set_allocated_dst_orgaddr(::std::string* dst_orgaddr) {
  if (dst_orgaddr != NULL) {
    
  } else {
    
  }
  dst_orgaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dst_orgaddr);
  // @@protoc_insertion_point(field_set_allocated:sm.gw_shortmsg.dst_orgaddr)
}

// string dst_destaddr = 56;
inline void gw_shortmsg::clear_dst_destaddr() {
  dst_destaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& gw_shortmsg::dst_destaddr() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.dst_destaddr)
  return dst_destaddr_.GetNoArena();
}
inline void gw_shortmsg::set_dst_destaddr(const ::std::string& value) {
  
  dst_destaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.dst_destaddr)
}
#if LANG_CXX11
inline void gw_shortmsg::set_dst_destaddr(::std::string&& value) {
  
  dst_destaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sm.gw_shortmsg.dst_destaddr)
}
#endif
inline void gw_shortmsg::set_dst_destaddr(const char* value) {
  
  dst_destaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sm.gw_shortmsg.dst_destaddr)
}
inline void gw_shortmsg::set_dst_destaddr(const char* value, size_t size) {
  
  dst_destaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sm.gw_shortmsg.dst_destaddr)
}
inline ::std::string* gw_shortmsg::mutable_dst_destaddr() {
  
  // @@protoc_insertion_point(field_mutable:sm.gw_shortmsg.dst_destaddr)
  return dst_destaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* gw_shortmsg::release_dst_destaddr() {
  // @@protoc_insertion_point(field_release:sm.gw_shortmsg.dst_destaddr)
  
  return dst_destaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void gw_shortmsg::set_allocated_dst_destaddr(::std::string* dst_destaddr) {
  if (dst_destaddr != NULL) {
    
  } else {
    
  }
  dst_destaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dst_destaddr);
  // @@protoc_insertion_point(field_set_allocated:sm.gw_shortmsg.dst_destaddr)
}

// string dst_servicecode = 57;
inline void gw_shortmsg::clear_dst_servicecode() {
  dst_servicecode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& gw_shortmsg::dst_servicecode() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.dst_servicecode)
  return dst_servicecode_.GetNoArena();
}
inline void gw_shortmsg::set_dst_servicecode(const ::std::string& value) {
  
  dst_servicecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.dst_servicecode)
}
#if LANG_CXX11
inline void gw_shortmsg::set_dst_servicecode(::std::string&& value) {
  
  dst_servicecode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sm.gw_shortmsg.dst_servicecode)
}
#endif
inline void gw_shortmsg::set_dst_servicecode(const char* value) {
  
  dst_servicecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sm.gw_shortmsg.dst_servicecode)
}
inline void gw_shortmsg::set_dst_servicecode(const char* value, size_t size) {
  
  dst_servicecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sm.gw_shortmsg.dst_servicecode)
}
inline ::std::string* gw_shortmsg::mutable_dst_servicecode() {
  
  // @@protoc_insertion_point(field_mutable:sm.gw_shortmsg.dst_servicecode)
  return dst_servicecode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* gw_shortmsg::release_dst_servicecode() {
  // @@protoc_insertion_point(field_release:sm.gw_shortmsg.dst_servicecode)
  
  return dst_servicecode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void gw_shortmsg::set_allocated_dst_servicecode(::std::string* dst_servicecode) {
  if (dst_servicecode != NULL) {
    
  } else {
    
  }
  dst_servicecode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dst_servicecode);
  // @@protoc_insertion_point(field_set_allocated:sm.gw_shortmsg.dst_servicecode)
}

// string dst_spcode = 58;
inline void gw_shortmsg::clear_dst_spcode() {
  dst_spcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& gw_shortmsg::dst_spcode() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.dst_spcode)
  return dst_spcode_.GetNoArena();
}
inline void gw_shortmsg::set_dst_spcode(const ::std::string& value) {
  
  dst_spcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.dst_spcode)
}
#if LANG_CXX11
inline void gw_shortmsg::set_dst_spcode(::std::string&& value) {
  
  dst_spcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sm.gw_shortmsg.dst_spcode)
}
#endif
inline void gw_shortmsg::set_dst_spcode(const char* value) {
  
  dst_spcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sm.gw_shortmsg.dst_spcode)
}
inline void gw_shortmsg::set_dst_spcode(const char* value, size_t size) {
  
  dst_spcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sm.gw_shortmsg.dst_spcode)
}
inline ::std::string* gw_shortmsg::mutable_dst_spcode() {
  
  // @@protoc_insertion_point(field_mutable:sm.gw_shortmsg.dst_spcode)
  return dst_spcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* gw_shortmsg::release_dst_spcode() {
  // @@protoc_insertion_point(field_release:sm.gw_shortmsg.dst_spcode)
  
  return dst_spcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void gw_shortmsg::set_allocated_dst_spcode(::std::string* dst_spcode) {
  if (dst_spcode != NULL) {
    
  } else {
    
  }
  dst_spcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dst_spcode);
  // @@protoc_insertion_point(field_set_allocated:sm.gw_shortmsg.dst_spcode)
}

// string src_ip = 59;
inline void gw_shortmsg::clear_src_ip() {
  src_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& gw_shortmsg::src_ip() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.src_ip)
  return src_ip_.GetNoArena();
}
inline void gw_shortmsg::set_src_ip(const ::std::string& value) {
  
  src_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.src_ip)
}
#if LANG_CXX11
inline void gw_shortmsg::set_src_ip(::std::string&& value) {
  
  src_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sm.gw_shortmsg.src_ip)
}
#endif
inline void gw_shortmsg::set_src_ip(const char* value) {
  
  src_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sm.gw_shortmsg.src_ip)
}
inline void gw_shortmsg::set_src_ip(const char* value, size_t size) {
  
  src_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sm.gw_shortmsg.src_ip)
}
inline ::std::string* gw_shortmsg::mutable_src_ip() {
  
  // @@protoc_insertion_point(field_mutable:sm.gw_shortmsg.src_ip)
  return src_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* gw_shortmsg::release_src_ip() {
  // @@protoc_insertion_point(field_release:sm.gw_shortmsg.src_ip)
  
  return src_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void gw_shortmsg::set_allocated_src_ip(::std::string* src_ip) {
  if (src_ip != NULL) {
    
  } else {
    
  }
  src_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), src_ip);
  // @@protoc_insertion_point(field_set_allocated:sm.gw_shortmsg.src_ip)
}

// int32 src_codetype = 60;
inline void gw_shortmsg::clear_src_codetype() {
  src_codetype_ = 0;
}
inline ::google::protobuf::int32 gw_shortmsg::src_codetype() const {
  // @@protoc_insertion_point(field_get:sm.gw_shortmsg.src_codetype)
  return src_codetype_;
}
inline void gw_shortmsg::set_src_codetype(::google::protobuf::int32 value) {
  
  src_codetype_ = value;
  // @@protoc_insertion_point(field_set:sm.gw_shortmsg.src_codetype)
}

inline bool gw_shortmsg::has_lsm() const {
  return lsm_case() != LSM_NOT_SET;
}
inline void gw_shortmsg::clear_has_lsm() {
  _oneof_case_[0] = LSM_NOT_SET;
}
inline gw_shortmsg::LsmCase gw_shortmsg::lsm_case() const {
  return gw_shortmsg::LsmCase(_oneof_case_[0]);
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace sm

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_shortmsg_2eproto__INCLUDED
